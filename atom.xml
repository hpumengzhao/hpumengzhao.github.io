<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Meng Space</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-07-29T12:40:23.626Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Codancer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>力扣周赛251题解</title>
    <link href="http://yoursite.com/2021/07/25/%E5%8A%9B%E6%89%A3%E5%91%A8%E8%B5%9B251%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2021/07/25/%E5%8A%9B%E6%89%A3%E5%91%A8%E8%B5%9B251%E9%A2%98%E8%A7%A3/</id>
    <published>2021-07-25T09:18:02.405Z</published>
    <updated>2021-07-29T12:40:23.626Z</updated>
    
    <content type="html"><![CDATA[<h1 id="力扣周赛251题解">力扣周赛251题解</h1><a id="more"></a><h2 id="t1.字符串转化后的各位数字之和">T1.字符串转化后的各位数字之和</h2><p>字符串转化后的各位数字之和</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getLucky</span><span class="params">(<span class="built_in">string</span> s, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; d;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:s)&#123;</span><br><span class="line">            <span class="keyword">int</span> k=c-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(k&gt;=<span class="number">10</span>)&#123;</span><br><span class="line">                d.push_back(k/<span class="number">10</span>);</span><br><span class="line">                d.push_back(k%<span class="number">10</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                d.push_back(k);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> tt=<span class="number">1</span>;tt&lt;=k;tt++)&#123;</span><br><span class="line">            <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> v:d)&#123;</span><br><span class="line">                ans+=v;</span><br><span class="line">            &#125;</span><br><span class="line">            d.<span class="built_in">clear</span>();</span><br><span class="line">            <span class="keyword">while</span>(ans)&#123;</span><br><span class="line">                d.push_back(ans%<span class="number">10</span>);</span><br><span class="line">                ans/=<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            reverse(d.<span class="built_in">begin</span>(),d.<span class="built_in">end</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> v:d)&#123;</span><br><span class="line">            res=res*<span class="number">10</span>+v;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="t2.-子字符串突变后可能得到的最大整数">T2. 子字符串突变后可能得到的最大整数</h2><p>贪心，找到第一个能够变大的为止，以其为起点突变即可，直到遇到一个突变后会变小的位置。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">maximumNumber</span><span class="params">(<span class="built_in">string</span> num, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; change)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n=(<span class="keyword">int</span>)num.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> id=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(change[num[i]-<span class="string">'0'</span>]+<span class="string">'0'</span>&gt;num[i])&#123;</span><br><span class="line">                id=i;<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(id==<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=id;i&lt;n;i++)&#123;</span><br><span class="line">             <span class="keyword">if</span>(change[num[i]-<span class="string">'0'</span>]+<span class="string">'0'</span>&gt;=num[i])&#123;</span><br><span class="line">                num[i]=change[num[i]-<span class="string">'0'</span>]+<span class="string">'0'</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="keyword">break</span>;</span><br><span class="line">             &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="t3.最大兼容性评分和">T3.最大兼容性评分和</h2><p>实际上利用next-permutation函数可以通过本题...比赛的时候想复杂了，使用了状压dp。</p><p>令<span class="math inline">\(dp[i][status]\)</span>表示前<span class="math inline">\(i\)</span>个学生已经选择了<span class="math inline">\(status\)</span>导师。</p><p>则状态转移方程为：</p><p><span class="math display">\[dp[i][status|(1&lt;&lt;j)]=max(dp[i][status|(1&lt;&lt;j)],dp[i-1][status]+cost(i,j))\]</span></p><p>其中<span class="math inline">\(cost(i,j)\)</span>表示学生<span class="math inline">\(i\)</span>跟随导师<span class="math inline">\(j\)</span>的兼容性评分，时间复杂度为<span class="math inline">\(O(n\cdot m^2 \cdot 2^m)\)</span></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> dp[<span class="number">10</span>][<span class="number">1</span>&lt;&lt;<span class="number">8</span>];</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> n=(<span class="keyword">int</span>)a.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==b[i])&#123;</span><br><span class="line">                ++ans;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">bitcount</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(x)&#123;</span><br><span class="line">            ans+=(x&amp;<span class="number">1</span>);</span><br><span class="line">            x/=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxCompatibilitySum</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; students, <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; mentors)</span> </span>&#123;</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> m=(<span class="keyword">int</span>)students.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> last=<span class="number">0</span>;last&lt;(<span class="number">1</span>&lt;&lt;m);last++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>((((last&gt;&gt;(j<span class="number">-1</span>))&amp;<span class="number">1</span>)==<span class="number">0</span>)&amp;&amp;bitcount(last)==i<span class="number">-1</span>)&#123;</span><br><span class="line">                        dp[i][last|(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))]=<span class="built_in">max</span>( dp[i][last|(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))],dp[i<span class="number">-1</span>][last]+cal(students[i<span class="number">-1</span>],mentors[j<span class="number">-1</span>]));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> dp[m][(<span class="number">1</span>&lt;&lt;m)<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="t4.删除系统中的重复文件夹">T4.删除系统中的重复文件夹</h2><p>卡常卡到爆炸...</p><p>考虑根据所有的文件路径复原出文件树，文件树的复原过程类似于字典树的构建过程。</p><p>接下来对于构造出来的文件树进行DFS，利用DFS求出以<span class="math inline">\(node\)</span>为根节点的子树的所有文件的hash值。</p><p>最后只要当前子树的hash值出现过，则当前子树就要被删除。</p><p>最后再利用一次DFS遍历出答案即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> base = <span class="number">233</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    ll hash_val;</span><br><span class="line">    <span class="built_in">vector</span>&lt;Node*&gt; sons;</span><br><span class="line">    Node(<span class="built_in">string</span> s,<span class="keyword">int</span> id):s(s),id(id)&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">map</span>&lt;pair&lt;Node*,<span class="built_in">string</span>&gt;,Node*&gt; nxt;</span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt; id;</span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;ll,<span class="keyword">int</span>&gt; cnt;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; &gt; ans;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; tmp;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; vec,Node *node)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">string</span> s:vec)&#123;</span><br><span class="line">            <span class="keyword">bool</span> <span class="built_in">find</span>=<span class="number">0</span>;</span><br><span class="line">            Node *p = nxt[&#123;node,s&#125;];</span><br><span class="line">            <span class="keyword">if</span>(p)&#123;</span><br><span class="line">                node=p;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                Node *v = <span class="keyword">new</span> Node(s,id[s]);</span><br><span class="line">                node-&gt;sons.push_back(v);</span><br><span class="line">                nxt[&#123;node,s&#125;]=v;</span><br><span class="line">                node=v;                </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">Gethash</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line">        ll ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:s)&#123;</span><br><span class="line">            ans=(ans*base%mod+(<span class="keyword">int</span>)c)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(Node* u)</span></span>&#123;</span><br><span class="line">        ll ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> v:u-&gt;sons)&#123;</span><br><span class="line">            DFS(v);</span><br><span class="line">            ll t=(v-&gt;hash_val*base%mod+Gethash(v-&gt;s))%mod;</span><br><span class="line">            ans=(ans*base%mod+t)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        cnt[ans]++;</span><br><span class="line">        u-&gt;hash_val=ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">DFSS</span><span class="params">(Node* u)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(cnt[u-&gt;hash_val]&gt;<span class="number">1</span>&amp;&amp;u-&gt;hash_val)&#123;</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(u-&gt;s!=<span class="string">"/"</span>)&#123;</span><br><span class="line">            tmp.push_back(u-&gt;s);</span><br><span class="line">            ans.push_back(tmp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> v:u-&gt;sons)&#123;</span><br><span class="line">            DFSS(v);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(tmp.<span class="built_in">size</span>()) tmp.pop_back();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&gt; <span class="title">deleteDuplicateFolder</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&gt;&amp; paths)</span> </span>&#123;</span><br><span class="line">        Node *root = <span class="keyword">new</span> Node(<span class="string">"/"</span>,<span class="number">1</span>);</span><br><span class="line">        Node *p=root;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> v:paths)&#123;</span><br><span class="line">            Insert(v,p);</span><br><span class="line">        &#125;</span><br><span class="line">        DFS(root);</span><br><span class="line">        DFSS(root);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;力扣周赛251题解&quot;&gt;力扣周赛251题解&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="力扣" scheme="http://yoursite.com/tags/%E5%8A%9B%E6%89%A3/"/>
    
  </entry>
  
  <entry>
    <title>Algorithms Weekly 10</title>
    <link href="http://yoursite.com/2021/01/02/Algorithmwk10/"/>
    <id>http://yoursite.com/2021/01/02/Algorithmwk10/</id>
    <published>2021-01-02T11:46:08.418Z</published>
    <updated>2021-01-02T12:06:16.470Z</updated>
    
    <content type="html"><![CDATA[<h2 id="机试康复训练r1codeforces-round-690-div.-3">机试康复训练R1:<a href="https://codeforces.com/contest/1462" target="_blank" rel="noopener">Codeforces Round #690 (Div. 3)</a></h2><a id="more"></a><h2 id="a.-favorite-sequence">A. Favorite Sequence</h2><p>题解：构造后的数组其实就是把构造前的数组的奇偶分开，奇数下标在前，偶数下标在后，同时讲偶数下标reverse一下。那么我们直接逆过程即可。时间复杂度<span class="math inline">\(O(n)\)</span></p><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">####3 4 5 2 9 1 1</span></span><br><span class="line">T=int(input())</span><br><span class="line"><span class="keyword">for</span> test <span class="keyword">in</span> range(T):</span><br><span class="line">    n=int(input())</span><br><span class="line">    a=input().split()</span><br><span class="line">    <span class="keyword">for</span> i  <span class="keyword">in</span> range(n):</span><br><span class="line">        a[i]=int(a[i])</span><br><span class="line">    odd=[]</span><br><span class="line">    even=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,(n+<span class="number">1</span>)//<span class="number">2</span>):</span><br><span class="line">        odd.append(a[i])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range((n+<span class="number">1</span>)//<span class="number">2</span>,n):</span><br><span class="line">        even.append(a[i])</span><br><span class="line">    even.reverse()</span><br><span class="line">    ans=[]</span><br><span class="line">    i=<span class="number">0</span></span><br><span class="line">    j=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i&lt;len(odd) <span class="keyword">and</span> j&lt;len(even):</span><br><span class="line">        ans.append(odd[i])</span><br><span class="line">        ans.append(even[j])</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">        j+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;len(odd)):</span><br><span class="line">        ans.append(odd[i])</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span>(j&lt;len(even)):</span><br><span class="line">        ans.append(even[j])</span><br><span class="line">        j+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> v <span class="keyword">in</span> ans:</span><br><span class="line">        print(v,end=<span class="string">" "</span>)</span><br><span class="line">    print(<span class="string">""</span>)</span><br></pre></td></tr></table></figure><h2 id="b.-last-years-substring">B. Last Year's Substring</h2><p>暴力枚举前后加起来共四位，看看是否能组成2020即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">T=int(input())</span><br><span class="line"><span class="keyword">for</span> test <span class="keyword">in</span> range(T):</span><br><span class="line">    n=int(input())</span><br><span class="line">    s=input()</span><br><span class="line">    <span class="keyword">if</span>(len(s)&lt;<span class="number">4</span>):</span><br><span class="line">        print(<span class="string">"No"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flag=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">5</span>):</span><br><span class="line">            j=<span class="number">4</span>-i</span><br><span class="line">            <span class="comment"># print(i,j,s[0:i],s[len(s)-j:len(s)])</span></span><br><span class="line">            <span class="keyword">if</span> (s[<span class="number">0</span>:i]+s[len(s)-j:len(s)])==<span class="string">"2020"</span>:</span><br><span class="line">                print(<span class="string">"YES"</span>)</span><br><span class="line">                flag=<span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag==<span class="number">0</span>:</span><br><span class="line">            print(<span class="string">"NO"</span>)</span><br></pre></td></tr></table></figure><h2 id="c.-unique-number">C. Unique Number</h2><p>二进制枚举从1-9，取满足条件的最小的即可，时间复杂度<span class="math inline">\(O(2^9)\)</span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">T=int(input())</span><br><span class="line">dig=[i+<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9</span>)]</span><br><span class="line"><span class="comment"># print(dig)</span></span><br><span class="line"><span class="keyword">for</span> test <span class="keyword">in</span> range(T):</span><br><span class="line">    x=int(input())</span><br><span class="line">    ans=<span class="number">99999999999</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1</span>&lt;&lt;<span class="number">9</span>):</span><br><span class="line">        lst=[]</span><br><span class="line">        <span class="keyword">for</span> j  <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">9</span>):</span><br><span class="line">            <span class="keyword">if</span> (i&gt;&gt;j)&amp;<span class="number">1</span>:</span><br><span class="line">                lst.append(j+<span class="number">1</span>)</span><br><span class="line">        s=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> v <span class="keyword">in</span> lst:</span><br><span class="line">            s+=v</span><br><span class="line">        <span class="keyword">if</span> s==x:</span><br><span class="line">            tmp=<span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> v <span class="keyword">in</span> lst:</span><br><span class="line">                tmp=tmp*<span class="number">10</span>+v</span><br><span class="line">            ans=min(ans,tmp)</span><br><span class="line">    <span class="keyword">if</span> ans == <span class="number">99999999999</span>:</span><br><span class="line">        print(<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(ans)</span><br></pre></td></tr></table></figure><h2 id="d.-add-to-neighbour-and-remove">D. Add to Neighbour and Remove</h2><p>题目可以简化为将数组划分成若干和相等的区间，答案即为每段的长度减一求和。由于<span class="math inline">\(n \leq 3000\)</span>,暴力枚举每段的大小即可。时间复杂度<span class="math inline">\(O(n^2)\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">T=<span class="keyword">int</span>(input())</span><br><span class="line"><span class="keyword">for</span> test in range(T):</span><br><span class="line">    n=<span class="keyword">int</span>(input())</span><br><span class="line">    ans=n</span><br><span class="line">    x=input().split(<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">for</span> i in range(n):</span><br><span class="line">        x[i]=<span class="keyword">int</span>(x[i])</span><br><span class="line">    con=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i in range(n):</span><br><span class="line">        con+=x[i]</span><br><span class="line">        now_ans=i</span><br><span class="line">        nows=<span class="number">0</span></span><br><span class="line">        cnt=<span class="number">0</span></span><br><span class="line">        flag=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> j in range(i+<span class="number">1</span>,n):</span><br><span class="line">            <span class="keyword">if</span> nows!=con <span class="keyword">and</span> nows+x[j]&gt;con:</span><br><span class="line">                flag=<span class="number">0</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> nows+x[j]&lt;=con:</span><br><span class="line">                nows+=x[j]</span><br><span class="line">                cnt+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> nows==con:</span><br><span class="line">                now_ans+=cnt<span class="number">-1</span></span><br><span class="line">                nows=<span class="number">0</span></span><br><span class="line">                cnt=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> flag <span class="keyword">and</span> nows==<span class="number">0</span>:</span><br><span class="line">            ans=min(ans,now_ans)</span><br><span class="line">    print(ans)</span><br></pre></td></tr></table></figure><h2 id="e2.-close-tuples-hard-version">E2. Close Tuples (hard version)</h2><p>考虑将数组<span class="math inline">\(a\)</span>排序，那么对于$ a_{i} $, 二分查找最远的 <span class="math inline">\(a_{j}\)</span> 使得 <span class="math inline">\(a_{j}-a_{i}\leq k\)</span> ，那么<span class="math inline">\(a_{i}\)</span>的贡献即为<span class="math inline">\(C(j-i,m-1)\)</span>,时间复杂度<span class="math inline">\(O(nlog(n))\)</span>。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2021-01-02, 13:02:26</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cassert&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;complex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;chrono&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;random&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> deb(x) cerr&lt;&lt;#x&lt;&lt;<span class="meta-string">" = "</span>&lt;&lt;(x)&lt;&lt;<span class="meta-string">"\n"</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">rng</span><span class="params">(chrono::steady_clock::now().time_since_epoch().count())</span></span>;</span><br><span class="line"><span class="function">ll <span class="title">Rand</span><span class="params">(ll B)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (ull)rng() % B;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line">ll fact[N],inv[N],factinv[N];</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    fact[<span class="number">0</span>]=inv[<span class="number">1</span>]=factinv[<span class="number">0</span>]=inv[<span class="number">0</span>]=fact[<span class="number">1</span>]=factinv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        fact[i]=(fact[i<span class="number">-1</span>]%mod*i%mod)%mod;</span><br><span class="line">        inv[i]=(mod-mod/i)*inv[mod%i]%mod;</span><br><span class="line">        factinv[i]=factinv[i<span class="number">-1</span>]*inv[i]%mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">c</span><span class="params">(ll n,ll m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> fact[n]*factinv[m]%mod*factinv[n-m]%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">rep(i,<span class="number">1</span>,n) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="keyword">int</span> l=i;</span><br><span class="line"><span class="keyword">int</span> r=upper_bound(a+<span class="number">1</span>,a+n+<span class="number">1</span>,a[i]+k)-a<span class="number">-1</span>;<span class="comment">//[l,r] is satisfied</span></span><br><span class="line"><span class="keyword">if</span>(r-l&gt;=m<span class="number">-1</span>) ans+=c(r-l,m<span class="number">-1</span>);</span><br><span class="line">ans%=mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line"><span class="keyword">while</span>(T--) solve();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="f.-the-treasure-of-the-segments">F. The Treasure of The Segments</h2><p>贪心的想，肯定是要找一个区间使得这个区间尽可能地和其他区间相交。枚举这个区间<span class="math inline">\([l,r]\)</span>，对于<span class="math inline">\(r_{i}&lt;l\)</span>的以及<span class="math inline">\(l_{i} &gt;r\)</span>的区间，一定不和<span class="math inline">\([l,r]\)</span>相交，剩余的一定和<span class="math inline">\([l,r]\)</span>相交，二分查找计算个数，更新结果，时间复杂度<span class="math inline">\(O(nlog(n))\)</span>。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2021-01-02, 13:36:42</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cassert&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;complex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;chrono&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;random&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> deb(x) cerr&lt;&lt;#x&lt;&lt;<span class="meta-string">" = "</span>&lt;&lt;(x)&lt;&lt;<span class="meta-string">"\n"</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">rng</span><span class="params">(chrono::steady_clock::now().time_since_epoch().count())</span></span>;</span><br><span class="line"><span class="function">ll <span class="title">Rand</span><span class="params">(ll B)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (ull)rng() % B;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> l[N],r[N],n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; L,R;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;l[i],&amp;r[i]);</span><br><span class="line">L.pb(l[i]);</span><br><span class="line">R.pb(r[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sort(L.begin(),L.end());</span><br><span class="line">sort(R.begin(),R.end());</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">1e9</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="keyword">int</span> rr=lower_bound(R.begin(),R.end(),l[i])-R.begin();</span><br><span class="line"><span class="keyword">int</span> ll=upper_bound(L.begin(),L.end(),r[i])-L.begin();</span><br><span class="line"><span class="comment">// cout&lt;&lt;i&lt;&lt;' '&lt;&lt;rr&lt;&lt;' '&lt;&lt;ll&lt;&lt;endl;</span></span><br><span class="line">ans=min(ans,rr+n-ll);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line"><span class="keyword">while</span>(T--) solve();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;机试康复训练r1codeforces-round-690-div.-3&quot;&gt;机试康复训练R1:&lt;a href=&quot;https://codeforces.com/contest/1462&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Codeforces Round #690 (Div. 3)&lt;/a&gt;&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="Problems" scheme="http://yoursite.com/tags/Problems/"/>
    
  </entry>
  
  <entry>
    <title>Algorithms Weekly 9</title>
    <link href="http://yoursite.com/2020/05/31/Algorithmwk9/"/>
    <id>http://yoursite.com/2020/05/31/Algorithmwk9/</id>
    <published>2020-05-31T11:55:07.805Z</published>
    <updated>2020-05-31T13:36:19.389Z</updated>
    
    <content type="html"><![CDATA[<h3 id="a-gugugu-week">A GuGuGu week</h3><a id="more"></a><p>好久没更算法周了,由于考研，写代码的时间基本已经没有了，所以现在的状态基本上是有空补补之前比赛的题目,题意和题解写的会比较潦草。</p><h4 id="kickstart-roundb-t2-bus-routes-10pts-13pts">2020KickStart RoundB T2 Bus Routes (10pts, 13pts)</h4><p>题意：</p><p>有<span class="math inline">\(n\)</span>个bus，第<span class="math inline">\(i\)</span>个<span class="math inline">\(bus\)</span>的发车周期为<span class="math inline">\(x_{i}\)</span>,你需要在第<span class="math inline">\(D\)</span>天之前按顺序把所有的bus乘坐，求最晚坐第一班的时间。</p><p>题解：倒着贪心即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2020-05-30, 20:55:05</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">ll n,d;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;d);</span><br><span class="line"><span class="function"><span class="built_in">vector</span>&lt;ll&gt; <span class="title">x</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;x[i]);</span><br><span class="line">ll now=d;</span><br><span class="line">fep(i,n,<span class="number">1</span>)&#123;</span><br><span class="line">ll nxt=(now/x[i])*x[i];</span><br><span class="line"><span class="comment">// cout&lt;&lt;i&lt;&lt;' '&lt;&lt;nxt&lt;&lt;endl;</span></span><br><span class="line">now=nxt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,now);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">rep(tt,<span class="number">1</span>,T)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>,tt);</span><br><span class="line">solve();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="kickstart-roundb-t3-robot-path-decoding-11pts-16pts">2020KickStart RoundB T3 Robot Path Decoding (11pts, 16pts)</h4><p>题意：</p><p>一个机器人在一个<span class="math inline">\(10^9 \cdot 10^9\)</span>的方阵上移动（循环方阵），初始是在<span class="math inline">\((1,1)\)</span>，然后只能往<span class="math inline">\(N,W,S,E\)</span>四个方向移动，给一个移动序列，计算最终机器人所在的位置。除了正常的字符串序列外，还包含<span class="math inline">\(X(Y)\)</span>类似的序列，表示把<span class="math inline">\(Y\)</span>重复<span class="math inline">\(X\)</span>次。</p><p>题解：</p><p>首先可以知道横竖互不相干，接下来就是计算横和竖分别的情况。对字符串进行拆解可以用balance，即当前操作的次数是最近出现的balance个数字的累乘。但由于方阵是循环的，每次还需将当前数值对<span class="math inline">\(10^9\)</span>取模。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2020-05-30, 21:10:54</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span>  N = <span class="number">3000</span>;</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> n=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">ll N,W,S,E;</span><br><span class="line">N=W=S=E=<span class="number">0</span>;</span><br><span class="line">ll balance=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; nums;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]&gt;=<span class="string">'1'</span>&amp;&amp;s[i]&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">nums.pb(s[i]-<span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">'('</span>)&#123;</span><br><span class="line">++balance;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">')'</span>)&#123;</span><br><span class="line">--balance;</span><br><span class="line"><span class="keyword">if</span>(nums.size()) nums.pop_back();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> siz=(<span class="keyword">int</span>)nums.size();</span><br><span class="line">ll cnt=<span class="number">1</span>;</span><br><span class="line">fep(j,siz<span class="number">-1</span>,siz-balance)&#123;</span><br><span class="line">cnt*=nums[j];</span><br><span class="line">cnt%=mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'N'</span>)&#123;</span><br><span class="line"> N+=cnt;</span><br><span class="line"> N%=mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'W'</span>)&#123;</span><br><span class="line"> W+=cnt;</span><br><span class="line"> W%=mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'E'</span>)&#123;</span><br><span class="line"> E+=cnt;</span><br><span class="line"> E%=mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'S'</span>)&#123;</span><br><span class="line"> S+=cnt;</span><br><span class="line"> S%=mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">S-=N;</span><br><span class="line">S%=mod;</span><br><span class="line">E-=W;</span><br><span class="line">E%=mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,(E+mod)%mod+<span class="number">1</span>,(S+mod)%mod+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">rep(tt,<span class="number">1</span>,T)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>,tt );</span><br><span class="line">solve();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="kickstart-roundc-stable-wall-8pts-13pts">2020KickStart RoundC Stable Wall (8pts, 13pts)</h4><p>题意：</p><p>判断一个polyomino 是否坚固，关于polyomino就是只有在色块有支撑的情况下，才能放当前色块，最终能构成的就是坚固的，如果坚固，给出一种顺序来。</p><p>题解：</p><p>拓扑排序，如果<span class="math inline">\(u\)</span>色块下面有<span class="math inline">\(v\)</span>色块，那么一定是<span class="math inline">\(v\)</span>早于<span class="math inline">\(u\)</span>,连边，跑拓扑排序即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2020-05-19, 21:15:11</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[N];</span><br><span class="line"><span class="keyword">bool</span> adj[N][N];</span><br><span class="line"><span class="keyword">char</span> s[N][N];</span><br><span class="line"><span class="keyword">int</span> ind[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">rep(i,<span class="number">1</span>,<span class="number">100</span>) G[i].clear();</span><br><span class="line"><span class="built_in">memset</span>(ind,<span class="number">0</span>,<span class="keyword">sizeof</span>(ind));</span><br><span class="line"><span class="built_in">memset</span>(adj,<span class="number">0</span>,<span class="keyword">sizeof</span>(adj));</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">char</span>&gt; sts;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">rep(j,<span class="number">1</span>,m)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s[i][j];</span><br><span class="line">sts.insert(s[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">rep(i,<span class="number">1</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line">rep(j,<span class="number">1</span>,m)&#123;</span><br><span class="line">adj[s[i+<span class="number">1</span>][j]-<span class="string">'A'</span>+<span class="number">1</span>][s[i][j]-<span class="string">'A'</span>+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">rep(i,<span class="number">1</span>,<span class="number">26</span>)&#123;</span><br><span class="line">rep(j,<span class="number">1</span>,<span class="number">26</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(i!=j&amp;&amp;adj[i][j]==<span class="number">1</span>)&#123;</span><br><span class="line">G[i].pb(j);</span><br><span class="line">ind[j]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> ans=<span class="string">""</span>;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">rep(i,<span class="number">1</span>,<span class="number">26</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(ind[i]==<span class="number">0</span>&amp;&amp;sts.find(<span class="keyword">char</span>(<span class="string">'A'</span>+i<span class="number">-1</span>))!=sts.end())&#123;</span><br><span class="line">q.push(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line"><span class="keyword">int</span> u=q.front();q.pop();</span><br><span class="line">ans+=<span class="keyword">char</span>(<span class="string">'A'</span>+u<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> v:G[u])&#123;</span><br><span class="line">ind[v]--;</span><br><span class="line"><span class="keyword">if</span>(ind[v]==<span class="number">0</span>) q.push(v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">int</span>)sts.size()!=(<span class="keyword">int</span>)ans.length())&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"-1"</span>&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">rep(tt,<span class="number">1</span>,T)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>,tt);</span><br><span class="line">solve();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="kickstart-roundd-candies-14pts-24pts">2020KickStart RoundD Candies (14pts, 24pts)</h4><p>题意：</p><p>一个长度为<span class="math inline">\(n\)</span>序列<span class="math inline">\(A\)</span>，两种操作</p><ul><li>Q L R查询<span class="math inline">\([l,r]\)</span>使得<span class="math inline">\(\sum_{l}^rA_{i}*(i-l+1)*(-1)^{i-l}\)</span>最大。</li><li>U i j把<span class="math inline">\(A_{i}\)</span>变成<span class="math inline">\(j\)</span></li></ul><p>题解：</p><p>两棵树状数组。</p><p>第一棵维护<span class="math inline">\((-1)^{i-1}*i*A_{i}\)</span></p><p>第二棵维护<span class="math inline">\((-1)^{i-1}*A_{i}\)</span></p><p>查询的时候按奇偶讨论</p><p><span class="math inline">\(u\)</span>奇数为: <span class="math inline">\(T1.get(u,v)-(u-1)*T2.get(u,v)\)</span></p><p><span class="math inline">\(u\)</span>偶数为:<span class="math inline">\(-T1.get(u,v)+(u-1)*T2.get(u,v)\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2020-05-20, 08:21:40</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BIT</span>&#123;</span></span><br><span class="line">ll c[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> pos,ll x)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=pos;i&lt;=N<span class="number">-100</span>;i+=lowbit(i))&#123;</span><br><span class="line">c[i]+=x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">query</span><span class="params">(<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=pos;i;i-=lowbit(i))&#123;</span><br><span class="line">ans+=c[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">get</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> query(r)-query(l<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;T1,T2;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">rep(i,<span class="number">1</span>,N<span class="number">-100</span>) T1.c[i]=T2.c[i]=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">a</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line"> <span class="keyword">if</span>(i&amp;<span class="number">1</span>) T1.update(i,i*a[i]);</span><br><span class="line"> <span class="keyword">else</span> T1.update(i,-i*a[i]);</span><br><span class="line"> <span class="keyword">if</span>(i&amp;<span class="number">1</span>) T2.update(i,a[i]);</span><br><span class="line"> <span class="keyword">else</span> T2.update(i,-a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> op[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,m)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s %d %d"</span>,op,&amp;u,&amp;v);</span><br><span class="line"><span class="keyword">if</span>(op[<span class="number">0</span>]==<span class="string">'U'</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(u&amp;<span class="number">1</span>) T1.update(u,u*v-u*a[u]);</span><br><span class="line"><span class="keyword">else</span> T1.update(u,-u*v+u*a[u]);</span><br><span class="line"><span class="keyword">if</span>(u&amp;<span class="number">1</span>) T2.update(u,v-a[u]);</span><br><span class="line"><span class="keyword">else</span> T2.update(u,-v+a[u]);</span><br><span class="line">a[u]=v;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(u&amp;<span class="number">1</span>)&#123;</span><br><span class="line">ans+=T1.get(u,v)-(u<span class="number">-1</span>)*T2.get(u,v);</span><br><span class="line"><span class="comment">//cout&lt;&lt;u&lt;&lt;' '&lt;&lt;v&lt;&lt;' '&lt;&lt;T1.get(u,v)-(u-1)*T2.get(u,v)&lt;&lt;endl;</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">ans+=-T1.get(u,v)+(u<span class="number">-1</span>)*T2.get(u,v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">rep(tt,<span class="number">1</span>,T)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>,tt);</span><br><span class="line">solve();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="codeforces-round-644-div.-3-f.-spy-string">Codeforces Round #644 (Div. 3) F. Spy-string</h4><p>题意：</p><p>给定<span class="math inline">\(n\)</span>个长度为<span class="math inline">\(m\)</span>的字符串，求一个等长字符串<span class="math inline">\(s\)</span>使得<span class="math inline">\(s\)</span>与每个字符串最多有一个位置不同。</p><p>题解：</p><p>我乱搜了一下就过了，时间复杂度???,不过貌似有更好的写法。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dif</span><span class="params">(<span class="built_in">string</span> a,<span class="built_in">string</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="keyword">int</span>)a.length();i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]!=b[i]) ++ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">char</span>&gt; g[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">string</span> s[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">string</span> <span class="keyword">final</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> depth,<span class="built_in">string</span> ans,<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; ow)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(depth==m<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">final</span>=ans;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; nxt;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">char</span> c:g[depth+<span class="number">1</span>])&#123;</span><br><span class="line"><span class="keyword">bool</span> ok=<span class="number">1</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i][depth+<span class="number">1</span>]!=c&amp;&amp;ow.find(i)!=ow.end())&#123;</span><br><span class="line">ok=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ok)&#123;</span><br><span class="line">nxt=ow;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i][depth+<span class="number">1</span>]!=c) nxt.insert(i);</span><br><span class="line">&#125;</span><br><span class="line">dfs(depth+<span class="number">1</span>,ans+c,nxt);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s[i];</span><br><span class="line">&#125;</span><br><span class="line">rep(j,<span class="number">0</span>,<span class="number">19</span>) g[j].clear();</span><br><span class="line">rep(j,<span class="number">0</span>,m<span class="number">-1</span>)&#123;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">g[j].insert(s[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; ow;</span><br><span class="line"><span class="keyword">final</span>=<span class="string">""</span>;</span><br><span class="line">dfs(<span class="number">-1</span>,<span class="string">""</span>,ow);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">final</span>.length()==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">final</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="codeforces-round-644-div.-3-g---ab-matrix">Codeforces Round #644 (Div. 3) G - A/B Matrix</h4><p>题意：</p><p>构造一个<span class="math inline">\(n\cdot m\)</span>的<span class="math inline">\(01\)</span>矩阵使得每行<span class="math inline">\(a\)</span>个<span class="math inline">\(1\)</span>，每列<span class="math inline">\(b\)</span>个<span class="math inline">\(1\)</span>。</p><p>题解：</p><p>写了个贪心，没有证明就过了，首先可以排除叼不能构成的情况即<span class="math inline">\(a*n!=b*m\)</span>，然后直接按行填，但是要友嫌填列里面<span class="math inline">\(1\)</span>最少的。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));</span><br><span class="line"><span class="keyword">int</span> n,m,a,b;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="keyword">if</span>((n*a)%m)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((n*a)/m!=b)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">cnt</span><span class="params">(<span class="number">60</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> minn=<span class="number">0</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="keyword">int</span> add=<span class="number">0</span>;</span><br><span class="line">rep(j,<span class="number">1</span>,m)&#123;<span class="comment">//先填最小的</span></span><br><span class="line"><span class="keyword">if</span>(add&gt;=a) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(cnt[j]==minn&amp;&amp;cnt[j]&lt;b&amp;&amp;ans[i][j]==<span class="number">0</span>)&#123;</span><br><span class="line">cnt[j]++;</span><br><span class="line">ans[i][j]=<span class="number">1</span>;</span><br><span class="line">add++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">rep(j,<span class="number">1</span>,m)&#123;<span class="comment">//把a用完</span></span><br><span class="line"><span class="keyword">if</span>(add&gt;=a) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(cnt[j]&lt;b&amp;&amp;!ans[i][j])&#123;</span><br><span class="line">cnt[j]++;</span><br><span class="line">ans[i][j]=<span class="number">1</span>;</span><br><span class="line">add++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">minn=<span class="number">1e8</span>;</span><br><span class="line">rep(j,<span class="number">1</span>,m)&#123;</span><br><span class="line">minn=min(minn,cnt[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">rep(j,<span class="number">1</span>,m) <span class="built_in">cout</span>&lt;&lt;ans[i][j];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;a-gugugu-week&quot;&gt;A GuGuGu week&lt;/h3&gt;
    
    </summary>
    
    
    
      <category term="Problems" scheme="http://yoursite.com/tags/Problems/"/>
    
  </entry>
  
  <entry>
    <title>Algorithms Weekly 8</title>
    <link href="http://yoursite.com/2020/05/16/Algorithmwk8/"/>
    <id>http://yoursite.com/2020/05/16/Algorithmwk8/</id>
    <published>2020-05-16T11:03:23.090Z</published>
    <updated>2020-05-16T11:41:31.644Z</updated>
    
    <content type="html"><![CDATA[<h2 id="a-game-of-life-week">A Game of life week</h2><a id="more"></a><h4 id="abc167-f.-bracket-sequencing">ABC167 F. Bracket Sequencing</h4><p>题意：</p><p>给定<span class="math inline">\(n\)</span>个括号串，判断是否存在一种排列顺序使这<span class="math inline">\(n\)</span>个串排序后形成的串合法。<span class="math inline">\((1 \leq n \leq 10^6)\)</span></p><p>题解：</p><p>对于每个串<span class="math inline">\(s_{i}\)</span>,令'('为<span class="math inline">\(1\)</span>，')'为<span class="math inline">\(-1\)</span>,计算<span class="math inline">\(balance\)</span>，如果<span class="math inline">\(balance\)</span>大于等于<span class="math inline">\(0\)</span>,放到一堆，否则放到另一堆，令<span class="math inline">\(a_{i}\)</span>为<span class="math inline">\(-min\{0,pre_{i,j}\}\)</span>，<span class="math inline">\(b_{i}\)</span>为第<span class="math inline">\(i\)</span>个字符串的<span class="math inline">\(balance\)</span>,将问题转化: 初试分数为<span class="math inline">\(0\)</span>, 得到第<span class="math inline">\(i\)</span>个串的前提是拥有<span class="math inline">\(a_{i}\)</span>分，得到第<span class="math inline">\(i\)</span>个串之后的分数为$ b_{i}$。判断能否拿完所有的串。</p><p>那么对于<span class="math inline">\(a_{i}&gt;=0\)</span>的情况，按照<span class="math inline">\(a_{i}\)</span>从小到大排序，这是很显然的贪心策略。</p><p>对于<span class="math inline">\(a_{i} &lt; 0\)</span>的情况，需要按照<span class="math inline">\(a_{i}+b_{i}\)</span>从大到小排序，其实本质是按照‘（’的个数从大到小排序，至于为什么不用考虑')'，是因为我们已经先把<span class="math inline">\(a_{i}&gt;=0\)</span>的放在了前面。读者可以自行脑补。</p><p>排完序后模拟即可。</p><p>代码:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2020-05-11, 20:15:07</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e6</span>+<span class="number">100</span>;</span><br><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; cnt[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; <span class="title">s</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; pos,neg;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="keyword">int</span> minn=<span class="number">0</span>;<span class="comment">// I should have -minn opening brackets before take it</span></span><br><span class="line"><span class="keyword">int</span> balance=<span class="number">0</span>;<span class="comment">// after take it ,  i can add balance to sum</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">char</span> c:s[i])&#123;</span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">'('</span>) ++balance;</span><br><span class="line"><span class="keyword">else</span> --balance;</span><br><span class="line">minn=min(minn,balance);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> need=-minn,get=balance;</span><br><span class="line"><span class="keyword">if</span>(balance&gt;=<span class="number">0</span>) pos.push_back(&#123;need,get&#125;);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">neg.push_back(&#123;need,get&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sort(pos.begin(),pos.end());</span><br><span class="line">sort(neg.begin(),neg.end(),[](<span class="keyword">const</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; a,<span class="keyword">const</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; b)&#123;</span><br><span class="line"><span class="keyword">return</span> a.first+a.second&gt;b.first+b.second;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">int</span> now=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:pos)&#123;</span><br><span class="line"><span class="keyword">if</span>(now&lt;v.first)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">now+=v.second;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:neg)&#123;</span><br><span class="line"><span class="keyword">if</span>(now&lt;v.first)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">now+=v.second;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(now)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="cf641div2-e.-orac-and-game-of-life">CF641div2 E. Orac and Game of Life</h4><p>题意：</p><p>一款"生命游戏",规则如下：</p><p>游戏在一个<span class="math inline">\(n*m\)</span>的平面上，每个格子为黑色或白色。游戏会进行若干轮，初始为第<span class="math inline">\(0\)</span>轮，对于每一轮：</p><ul><li>对于<span class="math inline">\((i,j)\)</span>，如果它的四周存在同色的格子，该轮<span class="math inline">\((i,j)\)</span>变色。</li><li>否则不变色</li></ul><p><span class="math inline">\(Q\)</span>次查询，对于每次查询，查询<span class="math inline">\((x,y)\)</span>在第<span class="math inline">\(t\)</span>轮的颜色。</p><p><span class="math inline">\((1 \leq n,m \leq 1000, 1 \leq t \leq 10^5)\)</span></p><p>题解：</p><p>假设对于<span class="math inline">\((i,j)\)</span>，如果<span class="math inline">\((i,j)\)</span>周围存在同色格子，那么定义其为坏格子，否则为好格子，那么对于所有格子，计算离其最近的坏格子的曼哈顿距离<span class="math inline">\(p\)</span>，如果<span class="math inline">\(t&lt;p\)</span>，则不会变色，否则每次交替变色。对于距离的计算，一次<span class="math inline">\(BFS\)</span>即可。时间复杂度<span class="math inline">\(O(n*m+t)\)</span>。</p><p>代码:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1005</span>;</span><br><span class="line"><span class="keyword">bool</span> bad[N][N];</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"><span class="keyword">bool</span> vis[N][N];</span><br><span class="line"><span class="keyword">char</span> maze[N][N];</span><br><span class="line"><span class="keyword">int</span> dir[<span class="number">4</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m,t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;t;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">rep(j,<span class="number">1</span>,m)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;maze[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(bad,<span class="number">0</span>,<span class="keyword">sizeof</span>(bad));</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">rep(j,<span class="number">1</span>,m)&#123;</span><br><span class="line">rep(k,<span class="number">0</span>,<span class="number">3</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> dx=i+dir[k][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> dy=j+dir[k][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(dx&gt;=<span class="number">1</span>&amp;&amp;dx&lt;=n&amp;&amp;dy&gt;=<span class="number">1</span>&amp;&amp;dy&lt;=m)&#123;</span><br><span class="line"><span class="keyword">if</span>(maze[dx][dy]==maze[i][j])&#123;</span><br><span class="line">bad[i][j]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">queue</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; q;</span><br><span class="line">rep(i,<span class="number">1</span>,n) rep(j,<span class="number">1</span>,m) f[i][j]=<span class="number">1e9</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">rep(j,<span class="number">1</span>,m)&#123;</span><br><span class="line"><span class="keyword">if</span>(bad[i][j])&#123;</span><br><span class="line">q.push(&#123;i,j&#125;);</span><br><span class="line">f[i][j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; rt=q.front();q.pop();</span><br><span class="line"><span class="keyword">int</span> x=rt.first;</span><br><span class="line"><span class="keyword">int</span> y=rt.second;</span><br><span class="line"><span class="keyword">if</span>(vis[x][y]) <span class="keyword">continue</span>;</span><br><span class="line">vis[x][y]=<span class="number">1</span>;</span><br><span class="line">rep(k,<span class="number">0</span>,<span class="number">3</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> dx=x+dir[k][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> dy=y+dir[k][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(dx&gt;=<span class="number">1</span>&amp;&amp;dx&lt;=n&amp;&amp;dy&gt;=<span class="number">1</span>&amp;&amp;dy&lt;=m)&#123;</span><br><span class="line"><span class="keyword">if</span>(f[dx][dy]&gt;f[x][y]+<span class="built_in">abs</span>(x-dx)+<span class="built_in">abs</span>(y-dy))&#123;</span><br><span class="line">f[dx][dy]=f[x][y]+<span class="built_in">abs</span>(x-dx)+<span class="built_in">abs</span>(y-dy);</span><br><span class="line">q.push(&#123;dx,dy&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line">ll p;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;i&gt;&gt;j&gt;&gt;p;</span><br><span class="line"><span class="keyword">if</span>(f[i][j]==<span class="number">1e9</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;maze[i][j]&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p&lt;=f[i][j])&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;maze[i][j]&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">p-=f[i][j];</span><br><span class="line"><span class="keyword">if</span>(p&amp;<span class="number">1</span>) <span class="built_in">cout</span>&lt;&lt;(!(maze[i][j]-<span class="string">'0'</span>))&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;maze[i][j]&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;a-game-of-life-week&quot;&gt;A Game of life week&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="Probelems" scheme="http://yoursite.com/tags/Probelems/"/>
    
  </entry>
  
  <entry>
    <title>Algorithms Weekly 7</title>
    <link href="http://yoursite.com/2020/05/04/Algorithmwk7/"/>
    <id>http://yoursite.com/2020/05/04/Algorithmwk7/</id>
    <published>2020-05-04T13:09:03.360Z</published>
    <updated>2020-05-04T13:32:59.054Z</updated>
    
    <content type="html"><![CDATA[<h2 id="a-lis-week">A LIS Week</h2><a id="more"></a><p>这周只打了ABC165，要说总结题目，就只能说一下F了。</p><h3 id="f---lis-on-tree"><strong>F - LIS on Tree</strong></h3><ul><li><p>题意：一个以<span class="math inline">\(1\)</span>为根节点的，由<span class="math inline">\(n\)</span>个节点的树，第<span class="math inline">\(i\)</span>个点的权值为<span class="math inline">\(w_{i}\)</span>, 对于每个<span class="math inline">\(k \in [1,n]\)</span>,计算从<span class="math inline">\(1\)</span>到<span class="math inline">\(k\)</span>的最短路径构成的序列的<span class="math inline">\(LIS\)</span>的长度。<span class="math inline">\((1 \leq n \leq 10^5)\)</span></p></li><li><p>题解：</p><p>首先我们先来回顾一下传统<span class="math inline">\(LIS\)</span>的计算方法，最暴力的一种是<span class="math inline">\(O(n^2)\)</span>的<span class="math inline">\(dp\)</span>，在算法竞赛中这种算法基本上是被淘汰了的。最常用的一个算法是利用binary search, 令<span class="math inline">\(dp_{i}\)</span>代表长度为<span class="math inline">\(i\)</span>的<span class="math inline">\(LIS\)</span>结尾的最小的值，初始的时候设置为无穷大。接下来对于每一个<span class="math inline">\(i \in [1,n]\)</span>，二分查找第一个大于等于该元素的位置，然后将其替换掉，最终的<span class="math inline">\(LIS\)</span>的长度就是最后一个不为<span class="math inline">\(INF\)</span>的位置，而这一步我们也可以用二分查找，因此最终时间复杂度为<span class="math inline">\(O(nlog(n))\)</span>。这个算法的关键在于二分查找第一个大于等于<span class="math inline">\(w_{i}\)</span>的元素并替换掉，这个本质是一种贪心的思想，举个例子：对于数组<span class="math inline">\(\{1,2,5,4,5\}\)</span>,当<span class="math inline">\(i=3\)</span>时，<span class="math inline">\(dp=\{1,2,5,inf,inf\}\)</span>,当<span class="math inline">\(i=4\)</span>的时候我们必须要把<span class="math inline">\(dp_{3}\)</span>换成<span class="math inline">\(4\)</span>，因为后面还有一个<span class="math inline">\(5\)</span>。</p><p>考虑在树上求<span class="math inline">\(LIS\)</span>，其实算法原理基本一致，但是我们唯一要考虑的就是：对于每个节点<span class="math inline">\(u\)</span>，我的<span class="math inline">\(dp\)</span>数组有效的元素，必须只能包含从<span class="math inline">\(1-u\)</span>路径的节点，其他节点不能参与进来，能做到这一点的只有<span class="math inline">\(DFS\)</span>，即每次沿着一条路走到底，由于走完后不能影响下一条路径，因此需要$dp $再回溯回去。</p></li><li><p>代码:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2020-05-04, 20:44:59</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> ll inf = <span class="number">1e18</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span>+<span class="number">100</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[N];</span><br><span class="line">ll dp[N],w[N],ans[N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=lower_bound(dp,dp+n,w[u])-dp;</span><br><span class="line">ll val=dp[x];</span><br><span class="line">dp[x]=w[u];</span><br><span class="line">ans[u]=lower_bound(dp,dp+n,inf)-dp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> v:G[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line">dfs(v,u);</span><br><span class="line">&#125;</span><br><span class="line">dp[x]=val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">rep(i,<span class="number">0</span>,n)dp[i]=inf;</span><br><span class="line">rep(i,<span class="number">0</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;w[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">rep(i,<span class="number">1</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;u&gt;&gt;v;</span><br><span class="line">--u;</span><br><span class="line">--v;</span><br><span class="line">G[u].pb(v);</span><br><span class="line">G[v].pb(u);</span><br><span class="line">&#125;</span><br><span class="line">dfs(<span class="number">0</span>,<span class="number">-1</span>);</span><br><span class="line">rep(i,<span class="number">0</span>,n<span class="number">-1</span>) <span class="built_in">cout</span>&lt;&lt;ans[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;a-lis-week&quot;&gt;A LIS Week&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="Problems" scheme="http://yoursite.com/tags/Problems/"/>
    
  </entry>
  
  <entry>
    <title>Algorithms Weekly 6</title>
    <link href="http://yoursite.com/2020/04/28/Algorithmwk6/"/>
    <id>http://yoursite.com/2020/04/28/Algorithmwk6/</id>
    <published>2020-04-28T09:45:47.115Z</published>
    <updated>2020-04-28T10:09:47.332Z</updated>
    
    <content type="html"><![CDATA[<h2 id="a-noi-week">A noi week</h2><a id="more"></a><ul><li><p><strong>codeforces round 637div2([Thanks, Ivan Belonogov!])</strong></p><p>Final score:</p><p><img src="https://i.loli.net/2020/04/28/RSfMiZAJEoIGmnw.png" /></p><p><strong>Problem D.</strong></p><p>D题的题意是有<span class="math inline">\(n\)</span>个八数码管，即每个八数码管由八根LED管组成，可以表示<span class="math inline">\(0-9\)</span>这<span class="math inline">\(10\)</span>个数字，现在可以任选<span class="math inline">\(k\)</span>根LED管点亮，问最大所能表示的数字是几。</p><p>思路就是先<span class="math inline">\(dp\)</span>记录可行状态，然后再贪心的选取即可。令<span class="math inline">\(dp_{i,j}\)</span>代表截止到第<span class="math inline">\(i\)</span>个八数码管，还有<span class="math inline">\(j\)</span>次点亮的机会的可行性，那么<span class="math inline">\(dp_{n+1,0}=1\)</span>，然后倒着<span class="math inline">\(dp\)</span>即可。处理完之后对每个八数码管贪心的选取最大的能点亮的数字即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2020-04-24, 00:27:50</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="built_in">string</span> lights[<span class="number">20</span>]=&#123;<span class="string">"1110111"</span>,<span class="string">"0010010"</span>,<span class="string">"1011101"</span>,<span class="string">"1011011"</span>,<span class="string">"0111010"</span>,<span class="string">"1101011"</span>,<span class="string">"1101111"</span>,<span class="string">"1010010"</span>,<span class="string">"1111111"</span>,<span class="string">"1111011"</span>&#125;;</span><br><span class="line"><span class="built_in">string</span> s[<span class="number">20000</span>];</span><br><span class="line"><span class="keyword">int</span> lastcost;</span><br><span class="line"><span class="keyword">bool</span> dp[<span class="number">2002</span>][<span class="number">20000</span>];<span class="comment">//boolean cost j after approach i</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cost</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="comment">// the cost of s[a]-&gt;lights[b]</span></span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">7</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[a][j]&gt;lights[b][j])&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans+=lights[b][j]-s[a][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">rep(i,<span class="number">1</span>,n) <span class="built_in">cin</span>&gt;&gt;s[i];</span><br><span class="line">dp[n+<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">lastcost=<span class="number">0</span>;</span><br><span class="line">fep(i,n,<span class="number">1</span>)&#123;</span><br><span class="line">fep(j,lastcost,<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(dp[i+<span class="number">1</span>][j]==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">rep(k,<span class="number">0</span>,<span class="number">9</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> costs=cost(i,k);</span><br><span class="line"><span class="keyword">if</span>(costs!=<span class="number">-1</span>) dp[i][j+costs]|=dp[i+<span class="number">1</span>][j];</span><br><span class="line">lastcost=max(lastcost,j+costs);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line"><span class="keyword">bool</span> ok=<span class="number">1</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="keyword">bool</span> found=<span class="literal">false</span>;</span><br><span class="line">fep(j,<span class="number">9</span>,<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> costs=cost(i,j);</span><br><span class="line"><span class="keyword">if</span>(costs!=<span class="number">-1</span>&amp;&amp;costs&lt;=k)&#123;</span><br><span class="line"><span class="keyword">if</span>(dp[i+<span class="number">1</span>][k-costs])&#123;</span><br><span class="line">ans.pb(j);</span><br><span class="line">k-=costs;</span><br><span class="line">found=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(found==<span class="literal">false</span>)&#123;</span><br><span class="line">ok=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ok)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> v:ans) <span class="built_in">cout</span>&lt;&lt;v;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>Noi online</strong></p><p>因为太怂没敢打提高组，打了普及组。比赛的时候提交了两道题，在洛谷上测试了民间数据都通过了。</p><p>预计成绩为<span class="math inline">\(200\)</span>分。</p><p><img src="https://i.loli.net/2020/04/28/w9JEslh2nFeH15L.png" /></p><ul><li><p>T1是个简单的二分，考虑每次启用距离山顶最近的魔法机关，然后二分最少次数即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  time</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span>+<span class="number">100</span>;</span><br><span class="line">ll n,L,v,a[N],q,tt,predis[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&gt;y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">// freopen("endless.in","r",stdin);</span></span><br><span class="line"><span class="comment">// freopen("endless.out","w",stdout);</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;n,&amp;L,&amp;v);</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">rep(i,<span class="number">1</span>,n) predis[i]=predis[i<span class="number">-1</span>]+a[i];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;q);</span><br><span class="line"><span class="keyword">while</span>(q--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;tt);</span><br><span class="line">ll l=<span class="number">0</span>;</span><br><span class="line">ll r=n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">bool</span> ok=<span class="number">0</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,<span class="number">30</span>)&#123;</span><br><span class="line">ll mid=(l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(predis[mid]+L&gt;tt*v)&#123;</span><br><span class="line">r=mid;</span><br><span class="line">ok=<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">l=mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ok)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,r);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>T3题意是你需要构造<span class="math inline">\(2n\)</span>个建筑，前<span class="math inline">\(n\)</span>个建筑的高度单调不减，后<span class="math inline">\(n\)</span>个建筑的高度单调不增，每个建筑的高度在<span class="math inline">\([1,m]\)</span>内，并且第<span class="math inline">\(x\)</span>和第<span class="math inline">\(y\)</span>座建筑的高度相同，计算方案数。</p><p>长度为<span class="math inline">\(n\)</span>的数组，每个数字单调不减的方案书为<span class="math inline">\(C(n+m-1,n)\)</span>,讨论<span class="math inline">\(x\)</span>和<span class="math inline">\(y\)</span>的位置即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2020-04-25, 15:24:40</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(ll i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(ll i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span>+<span class="number">100</span>;</span><br><span class="line">ll n,m,x,y;</span><br><span class="line">ll fact[N],inv[N],factinv[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    fact[<span class="number">0</span>]=inv[<span class="number">1</span>]=factinv[<span class="number">0</span>]=inv[<span class="number">0</span>]=fact[<span class="number">1</span>]=factinv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">200010</span>;i++)&#123;</span><br><span class="line">        fact[i]=(fact[i<span class="number">-1</span>]%mod*i%mod)%mod;</span><br><span class="line">        inv[i]=(mod-mod/i)*inv[mod%i]%mod;</span><br><span class="line">        factinv[i]=factinv[i<span class="number">-1</span>]*inv[i]%mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">c</span><span class="params">(ll n,ll m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> fact[n]*factinv[m]%mod*factinv[n-m]%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">(ll n,ll m)</span></span>&#123;<span class="comment">// the number of lengtn n and each number belongs [1,m]</span></span><br><span class="line"><span class="keyword">if</span>(m+n<span class="number">-1</span>&lt;n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> c(m+n<span class="number">-1</span>,n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">// freopen("city.in","r",stdin);</span></span><br><span class="line"><span class="comment">// freopen("city.out","w",stdout);</span></span><br><span class="line">init();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld"</span>,&amp;m,&amp;n,&amp;x,&amp;y);</span><br><span class="line"><span class="keyword">if</span>(y&lt;=n)&#123;</span><br><span class="line">ll left=<span class="number">0</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,m)&#123;</span><br><span class="line">ll xx=solve(x<span class="number">-1</span>,i);</span><br><span class="line">ll yy=solve(n-y,m-i+<span class="number">1</span>);</span><br><span class="line">left+=(xx*yy)%mod;</span><br><span class="line">left%=mod;</span><br><span class="line">&#125;</span><br><span class="line">ll right=solve(n,m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, (left*right)%mod);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x&gt;n)&#123;</span><br><span class="line">ll left=solve(n,m);</span><br><span class="line">ll right=<span class="number">0</span>;</span><br><span class="line">x=<span class="number">2</span>*n+<span class="number">1</span>-x;</span><br><span class="line">y=<span class="number">2</span>*n+<span class="number">1</span>-y;</span><br><span class="line">swap(x,y);</span><br><span class="line">rep(i,<span class="number">1</span>,m)&#123;</span><br><span class="line">ll xx=solve(x<span class="number">-1</span>,i);</span><br><span class="line">ll yy=solve(n-y,m-i+<span class="number">1</span>);</span><br><span class="line">right+=(xx*yy)%mod;</span><br><span class="line">right%=mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, (left*right)%mod);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line">ll left=<span class="number">0</span>;</span><br><span class="line">ll right=<span class="number">0</span>;</span><br><span class="line">y=<span class="number">2</span>*n+<span class="number">1</span>-y;</span><br><span class="line">rep(i,<span class="number">1</span>,m)&#123;</span><br><span class="line">left=solve(x<span class="number">-1</span>,i);</span><br><span class="line">left*=solve(n-x,m-i+<span class="number">1</span>);</span><br><span class="line">left%=mod;</span><br><span class="line">right=solve(y<span class="number">-1</span>,i);</span><br><span class="line">right*=solve(n-y,m-i+<span class="number">1</span>);</span><br><span class="line">right%=mod;</span><br><span class="line">ans+=(left*right)%mod;</span><br><span class="line">ans%=mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;a-noi-week&quot;&gt;A noi week&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="Problems" scheme="http://yoursite.com/tags/Problems/"/>
    
  </entry>
  
  <entry>
    <title>Algorithms Weekly 5</title>
    <link href="http://yoursite.com/2020/04/19/Algorithmwk5/"/>
    <id>http://yoursite.com/2020/04/19/Algorithmwk5/</id>
    <published>2020-04-19T11:56:54.026Z</published>
    <updated>2020-04-28T10:09:07.536Z</updated>
    
    <content type="html"><![CDATA[<h2 id="an-easy-problems-week">An Easy problems week</h2><a id="more"></a><p>本周参加了三场比赛，Codeforces Round #634 (Div. 3)，牛客小白月赛，和本周的力扣周赛。</p><ul><li><p><strong>Codeforces Round #634 (Div. 3)</strong></p><p>standing:</p><p><img src="https://i.loli.net/2020/04/19/Nm2AryxLXzUkOEQ.png" alt="image-20200419200205067.png" /></p></li></ul><p>div3场还是稍微简单一些，但是中间被D卡了，然后先跑去写了E1&amp;E2，不过cf的机子是真的快，我E2代码的复杂度大概是<span class="math inline">\(2e9\)</span>，但是<span class="math inline">\(1.4s\)</span>就跑完了。回头看过D突然发现这是个简单题，题目大意就是一个<span class="math inline">\(9*9\)</span>的数独，每个位置的数字都在<span class="math inline">\([1,9]\)</span>之内，你最多可以改变<span class="math inline">\(9\)</span>个位置的数字，即变成另一个<span class="math inline">\([1,9]\)</span>内的数字，**使得每行，每列，每个3*3的子数独都存在相同元素**，给出一种改变方法。</p><p>思路就是改变<span class="math inline">\((0,0),(1,3),(2,6),(3,1),(4,4),(5,7),(6,2),(7,5),(8,8)\)</span>这九个位置即可。</p><ul><li><p><strong>牛客小白月赛24</strong></p><p>standing:</p><p><img src="https://i.loli.net/2020/04/19/fUcpo3qZr9ykxOC.png" alt="image-20200419201023216.png" /></p></li></ul><p>貌似并没有很精妙的题目，都是板子&amp;套路题。</p><ul><li><p>Leetcode Weekly 185</p><p>standing（貌似前200有字节内推机会，对于考研狗毫无意义）</p><p><img src="https://i.loli.net/2020/04/19/5yoSx81GeU6q2fT.png" alt="image-20200419201320512.png" /></p></li></ul><p>这次的T3还是很有意思的。</p><p><strong>T3题面</strong>：</p><p>给你一个字符串 <code>croakOfFrogs</code>，它表示不同青蛙发出的蛙鸣声（字符串 "croak" ）的组合。由于同一时间可以有多只青蛙呱呱作响，所以 <code>croakOfFrogs</code> 中会混合多个 “croak” <em>。</em>请你返回模拟字符串中所有蛙鸣所需不同青蛙的最少数目。</p><p><strong>注意：</strong>要想发出蛙鸣 "croak"，青蛙必须 <strong>依序</strong> 输出 <code>‘c’, ’r’, ’o’, ’a’, ’k’</code> 这 5 个字母。如果没有输出全部五个字母，那么它就不会发出声音。</p><p>如果字符串 <code>croakOfFrogs</code> 不是由若干有效的 "croak" 字符混合而成，请返回 <code>-1</code> 。</p><p>我的解法是类似于括号匹配的方式，设置四个变量代表当前<span class="math inline">\(c,r,o,a\)</span>的数目，假设当前字母是<span class="math inline">\(r\)</span>，那么<span class="math inline">\(c\)</span>的个数就要减去<span class="math inline">\(1\)</span>，当遇到<span class="math inline">\(k\)</span>的时候就算是匹配完了一只青蛙了，此时更新最大值，最大值为<span class="math inline">\(max(ans,nc+nr+no+na+1)\)</span></p><p>实际就是每次更新还未匹配完的线程数（可能这样容易理解点）。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minNumberOfFrogs</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> bc=<span class="number">0</span>,br=<span class="number">0</span>,bo=<span class="number">0</span>,ba=<span class="number">0</span>,bk=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> maxx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:s)&#123;</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">'c'</span>) ++bc;</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">'r'</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(bc==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                --bc;</span><br><span class="line">                ++br;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">'o'</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(br==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                --br;</span><br><span class="line">                ++bo;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">'a'</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(bo==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                --bo;</span><br><span class="line">                ++ba;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">'k'</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(ba==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                --ba;</span><br><span class="line">                maxx=max(maxx,ba+bo+br+bc+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(bc||br||bo||ba) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">return</span> maxx;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>T4是一个很简单的dp，此处不再赘述，贴个代码。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> dp[<span class="number">60</span>][<span class="number">101</span>][<span class="number">60</span>];<span class="comment">//截止到a[i] 最大值为j cost为k的方案数</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numOfArrays</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) dp[<span class="number">1</span>][i][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> now=<span class="number">1</span>;now&lt;=m;now++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> last=<span class="number">1</span>;last&lt;=m;last++)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(now&gt;last)&#123;</span><br><span class="line">                            dp[i][now][k+<span class="number">1</span>]+=dp[i<span class="number">-1</span>][last][k];</span><br><span class="line">                            dp[i][now][k+<span class="number">1</span>]%=mod;</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            dp[i][last][k]+=dp[i<span class="number">-1</span>][last][k];</span><br><span class="line">                            dp[i][last][k]%=mod;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">            ans+=dp[n][i][k];</span><br><span class="line">            ans%=mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;an-easy-problems-week&quot;&gt;An Easy problems week&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="Problems" scheme="http://yoursite.com/tags/Problems/"/>
    
  </entry>
  
  <entry>
    <title>Algorithms Weekly 4</title>
    <link href="http://yoursite.com/2020/04/11/AlgorithmWK4/"/>
    <id>http://yoursite.com/2020/04/11/AlgorithmWK4/</id>
    <published>2020-04-11T10:50:25.826Z</published>
    <updated>2020-04-13T04:02:04.182Z</updated>
    
    <content type="html"><![CDATA[<h2 id="a-tle-week">A TLE Week</h2><a id="more"></a><ul><li><p><strong>Nowcoder练习赛61</strong></p><p>D.<strong>最短路变短了</strong></p><p>一个<span class="math inline">\(n\)</span>个节点<span class="math inline">\(m\)</span>条边的有向图，有<span class="math inline">\(q\)</span>次查询，每次查询一条边<span class="math inline">\((u,v)\)</span>，如果把<span class="math inline">\((u,v)\)</span>反过来，判断<span class="math inline">\(1\)</span>到<span class="math inline">\(n\)</span></p><p>的最短路会不会变短。</p><p><span class="math inline">\((1≤n≤100000),(1≤m≤200000), (1≤q≤200000)\)</span></p><p>solution:</p><p>先跑一边最短路，令<span class="math inline">\(da_{i}\)</span>代表<span class="math inline">\(1\)</span>到<span class="math inline">\(i\)</span>的最短路，再反向建边以<span class="math inline">\(n\)</span>为起点跑一边最短路，<span class="math inline">\(db_{i}\)</span>为<span class="math inline">\(i\)</span>到<span class="math inline">\(n\)</span>的最短路，</p><p>对于查询的<span class="math inline">\((u,v,w)\)</span>，判断是否<span class="math inline">\(da_{v}+w+db_{u}&lt;da_{n}\)</span>，如果满足，则最短路会变短。</p><p>code:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2020-04-10, 20:13:32</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200010</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line">ll dis;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> n,m,u,v,x;</span><br><span class="line">ll w;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(node a,node b)&#123;</span><br><span class="line"><span class="keyword">return</span> a.dis&gt;b.dis;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">graphs</span>&#123;</span></span><br><span class="line"><span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>,ll&gt;&gt; G[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,ll w)</span></span>&#123;</span><br><span class="line">G[u].pb(&#123;v,w&#125;);</span><br><span class="line">&#125;</span><br><span class="line">ll dis[N];</span><br><span class="line">priority_queue&lt;node&gt; q;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> st)</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">dis[i]=<span class="number">1e17</span>;</span><br><span class="line">&#125;</span><br><span class="line">dis[st]=<span class="number">0</span>;</span><br><span class="line">q.push(&#123;st,<span class="number">0</span>&#125;);</span><br><span class="line"><span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">node rt=q.top();q.pop();</span><br><span class="line"><span class="keyword">int</span> u=rt.id;</span><br><span class="line"><span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">vis[u]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> adj:G[u])&#123;</span><br><span class="line"><span class="keyword">int</span> v=adj.first;</span><br><span class="line">ll w=adj.second;</span><br><span class="line"><span class="keyword">if</span>(dis[v]&gt;dis[u]+w)&#123;</span><br><span class="line">dis[v]=dis[u]+w;</span><br><span class="line">q.push(&#123;v,dis[v]&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;A,B;</span><br><span class="line">pair&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;,ll&gt; edges[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">rep(i,<span class="number">1</span>,m)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d %lld"</span>,&amp;u,&amp;v,&amp;w);</span><br><span class="line">edges[i]=&#123;&#123;u,v&#125;,w&#125;;</span><br><span class="line">A.addedge(u,v,w);</span><br><span class="line">B.addedge(v,u,w);</span><br><span class="line">&#125;</span><br><span class="line">A.bfs(<span class="number">1</span>);</span><br><span class="line">B.bfs(n);</span><br><span class="line">ll ans=A.dis[n];</span><br><span class="line"><span class="keyword">int</span> q;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line"><span class="keyword">while</span>(q--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line"><span class="keyword">int</span> uu=edges[x].first.first;</span><br><span class="line"><span class="keyword">int</span> vv=edges[x].first.second;</span><br><span class="line">ll ww=edges[x].second;</span><br><span class="line">ll fi=A.dis[vv];</span><br><span class="line">ll se=B.dis[uu];</span><br><span class="line"><span class="keyword">if</span>(fi+se+ww&lt;ans)&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Leetcode 30days challenge</p><p><strong>Middle of the Linked List</strong></p><p>寻找链表的中间节点，这是一个非常经典的问题，设置两个指针，一个每次跳一步，另一个每次跳两步，直到快的那个为空，慢的那个所在的节点即为答案。</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment">   * struct ListNode &#123;</span></span><br><span class="line"><span class="comment">   *     int val;</span></span><br><span class="line"><span class="comment">   *     ListNode *next;</span></span><br><span class="line"><span class="comment">   *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment">   * &#125;;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">      <span class="function">ListNode* <span class="title">middleNode</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">          ListNode *A=head;</span><br><span class="line">          ListNode *B=head;</span><br><span class="line">          <span class="keyword">while</span>(B!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">              B=B-&gt;next;</span><br><span class="line">              <span class="keyword">if</span>(B==<span class="literal">NULL</span>)&#123;</span><br><span class="line">                  <span class="keyword">return</span> A;</span><br><span class="line">              &#125;</span><br><span class="line">              A=A-&gt;next;</span><br><span class="line">              B=B-&gt;next;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> A;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p><strong>给 N x 3 网格图涂色的方案数</strong></p><p>题面：</p><ul><li>你有一个 <span class="math inline">\(n \cdot 3\)</span> 的网格图 grid ，你需要用 红，黄，绿 三种颜色之一给每一个格子上色，且确保相邻格子颜色不同（也就是有相同水平边或者垂直边的格子颜色不同）。给你网格图的行数 <span class="math inline">\(n\)</span> 。请你返回给 grid 涂色的方案数。由于答案可能会非常大，请你返回答案对 <span class="math inline">\(10^9 + 7\)</span> 取余的结果。</li></ul><p>解法:</p><ul><li>简单dp,枚举每一行的所有状态，按行转移即可，时间复杂度<span class="math inline">\(O(27n)\)</span>。</li></ul><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> dp[<span class="number">5005</span>][<span class="number">30</span>];</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numOfWays</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="comment">// string up,now;</span></span><br><span class="line">        <span class="keyword">int</span> up[<span class="number">3</span>]=&#123;<span class="number">0</span>&#125;,now[<span class="number">3</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">25</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x=i;</span><br><span class="line">            <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(x)&#123;</span><br><span class="line">                up[cnt++]=x%<span class="number">3</span>;</span><br><span class="line">                x/=<span class="number">3</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(up[<span class="number">2</span>]!=up[<span class="number">1</span>]&amp;&amp;up[<span class="number">1</span>]!=up[<span class="number">0</span>])&#123;</span><br><span class="line">                dp[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> last=<span class="number">0</span>;last&lt;=<span class="number">25</span>;last++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++) up[j]=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">bool</span> ok=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> x=last;</span><br><span class="line">                <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span>(x)&#123;</span><br><span class="line">                    up[cnt++]=x%<span class="number">3</span>;</span><br><span class="line">                    x/=<span class="number">3</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(up[<span class="number">2</span>]!=up[<span class="number">1</span>]&amp;&amp;up[<span class="number">1</span>]!=up[<span class="number">0</span>])&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> nxt=<span class="number">0</span>;nxt&lt;=<span class="number">25</span>;nxt++)&#123;</span><br><span class="line">                        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">3</span>;k++) now[k]=<span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">int</span> x=nxt;</span><br><span class="line">                        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">while</span>(x)&#123;</span><br><span class="line">                            now[cnt++]=x%<span class="number">3</span>;</span><br><span class="line">                            x/=<span class="number">3</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>(now[<span class="number">2</span>]!=now[<span class="number">1</span>]&amp;&amp;now[<span class="number">1</span>]!=now[<span class="number">0</span>])&#123;</span><br><span class="line">                            <span class="keyword">if</span>((now[<span class="number">0</span>]!=up[<span class="number">0</span>])&amp;&amp;(now[<span class="number">1</span>]!=up[<span class="number">1</span>])&amp;&amp;(now[<span class="number">2</span>]!=up[<span class="number">2</span>]))&#123;</span><br><span class="line">                                dp[i][nxt]+=dp[i<span class="number">-1</span>][last];</span><br><span class="line">                                dp[i][nxt]%=<span class="number">1000000007</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">25</span>;i++)&#123;</span><br><span class="line">            ans+=dp[n][i];</span><br><span class="line">            ans%=<span class="number">1000000007</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p><strong>ABC162E. Sum of gcd of Tuples (Hard)</strong></p><p>题意:</p><ul><li>有一个未知序列<span class="math inline">\(a\)</span>,长度为<span class="math inline">\(n\)</span>,已知<span class="math inline">\(a\)</span>中的每个元素都在<span class="math inline">\([1,k]\)</span>之内，这样的序列有<span class="math inline">\(k^n\)</span>个，计算<br /><span class="math display">\[\sum\limits_{i=1}^{k^n}{gcd(a_{1},a_{2}...,a_{n})}\]</span></li></ul><p>解法：</p><ul><li>考虑<span class="math inline">\(cnt_{i}\)</span>为<span class="math inline">\(gcd\)</span>为<span class="math inline">\(i\)</span>的所有序列个数，那么<span class="math inline">\(a\)</span>中的每个元素必定是<span class="math inline">\(i\)</span>的倍数，这样的序列有<span class="math inline">\({\lfloor \frac{k}{i} \rfloor}^n\)</span>个，但是这样我们也会把<span class="math inline">\(gcd\)</span>为<span class="math inline">\(2i,3i,4*i...\)</span>也会统计上，因此还得减去<span class="math inline">\(cnt_{j}(j|i)\)</span>，我们从<span class="math inline">\(k\)</span>到<span class="math inline">\(1\)</span>倒着枚举即可，时间复杂度为<span class="math inline">\(O(n \cdot \sqrt n)\)</span>。</li></ul><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2020-04-12, 21:02:02</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">ll ans=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(b)&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=ans*a%mod;</span><br><span class="line">a=a*a%mod;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans%mod;</span><br><span class="line">&#125;</span><br><span class="line">ll cnt[<span class="number">500005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ll n,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line">fep(i,k,<span class="number">1</span>)&#123;</span><br><span class="line">cnt[i]=qpow(k/i,n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>*i;j&lt;=k;j+=i)&#123;</span><br><span class="line">cnt[i]-=cnt[j];</span><br><span class="line">cnt[i]+=mod;</span><br><span class="line">cnt[i]%=mod;</span><br><span class="line">&#125;</span><br><span class="line">ans+=((ll)i*cnt[i])%mod;</span><br><span class="line">ans%=mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>ABC162F. Select Half</strong></p><p>题意：</p><ul><li>从长度为<span class="math inline">\(n\)</span>的数组<span class="math inline">\(a\)</span>中选出<span class="math inline">\(\lfloor \frac{n}{2} \rfloor\)</span>个不相邻的元素使他们和最大。</li></ul><p>解法：</p><ul><li><p>假设选择了前<span class="math inline">\(i\)</span>个元素并且<span class="math inline">\(a_{i}\)</span>被选择了,此时最少会有<span class="math inline">\(\lfloor \frac{n+1}{2} \rfloor-1\)</span>个空格，类似于：</p><p>XOXOXOXO</p><p>XOXOXO（X是被选择的）</p><p>令<span class="math inline">\(dp_{i,j}\)</span>代表选择了<span class="math inline">\(a_{i}\)</span>并且比<span class="math inline">\(\lfloor \frac{i+1}{2} \rfloor-1\)</span>多使用了<span class="math inline">\(j\)</span>个空格，<span class="math inline">\(j\)</span>最大为<span class="math inline">\(2\)</span>，此时的最大值。</p><p>因此我们可以得出转移方程：</p><p><span class="math inline">\(dp_{i,0}=dp_{i-2,0}+a_{i}\)</span> (一个也不多，那么肯定是选择了第<span class="math inline">\(i-2\)</span>个，接下来就是<span class="math inline">\(i\)</span>)</p><p><span class="math inline">\(dp_{i,1}=max(dp_{i-2,1},dp_{i-3,0})+a_{i}\)</span>(多一个空格，可能是从<span class="math inline">\(i-2\)</span>之前就多了，或者多出来的就是<span class="math inline">\(i-2\)</span>)</p><p><span class="math inline">\(dp_{i,2}=max(dp_{i-2,2},dp_{i-3,1},dp_{i-4,0})+a_{i}\)</span>（读者可以自己分析，不再赘述，和<span class="math inline">\(dp_{i,1}\)</span>的情况类似）</p><p>转移完之后考虑<span class="math inline">\(n\)</span>的奇偶性，如果<span class="math inline">\(n\)</span>为奇数。</p><p>假设最后选了第<span class="math inline">\(n\)</span>个，结果为<span class="math inline">\(dp_{n,2}\)</span>(肯定多<span class="math inline">\(2\)</span>个)</p><p>XOXOOOX(本来是最少用<span class="math inline">\(3-1=2\)</span>个空格，现在用了<span class="math inline">\(4\)</span>个)</p><p>假设最后选择了第<span class="math inline">\((n-1)\)</span>个，那么结果为<span class="math inline">\(dp_{n-1,1}\)</span>(肯定多$ 1 $个)</p><p>XOXOOXO(本来是最少用<span class="math inline">\(3-1=2\)</span>个空格，现在用了$ 3 $个)</p><p>假设最后选择了第<span class="math inline">\((n-2)\)</span>个，那么结果为<span class="math inline">\(dp_{n-2,0}\)</span></p><p>XOXOXOO(只用了两个)</p><p>偶数情况类似，答案取<span class="math inline">\(max(dp_{n-1,0},dp_{n,1})\)</span>，读者可以自己讨论。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2020-04-13, 10:42:14</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span>+<span class="number">100</span>;</span><br><span class="line">ll dp[N][<span class="number">3</span>];</span><br><span class="line">ll a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">rep(j,<span class="number">0</span>,<span class="number">2</span>)&#123;</span><br><span class="line">dp[i][j]=<span class="number">-1e18</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">rep(i,<span class="number">1</span>,<span class="number">3</span>) dp[i][i<span class="number">-1</span>]=a[i];</span><br><span class="line">rep(i,<span class="number">3</span>,n)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">2</span>)&#123;</span><br><span class="line">dp[i][<span class="number">0</span>]=max(dp[i][<span class="number">0</span>],dp[i<span class="number">-2</span>][<span class="number">0</span>])+a[i];</span><br><span class="line">dp[i][<span class="number">1</span>]=max(dp[i][<span class="number">1</span>],dp[i<span class="number">-2</span>][<span class="number">1</span>]+a[i]);</span><br><span class="line">dp[i][<span class="number">2</span>]=max(dp[i][<span class="number">2</span>],dp[i<span class="number">-2</span>][<span class="number">2</span>]+a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">3</span>)&#123;</span><br><span class="line">dp[i][<span class="number">1</span>]=max(dp[i][<span class="number">1</span>],dp[i<span class="number">-3</span>][<span class="number">0</span>]+a[i]);</span><br><span class="line">dp[i][<span class="number">2</span>]=max(dp[i][<span class="number">2</span>],dp[i<span class="number">-3</span>][<span class="number">1</span>]+a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">4</span>)&#123;</span><br><span class="line">dp[i][<span class="number">2</span>]=max(dp[i][<span class="number">2</span>],dp[i<span class="number">-4</span>][<span class="number">0</span>]+a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ll ans=<span class="number">-1e18</span>;</span><br><span class="line"><span class="keyword">if</span>(n&amp;<span class="number">1</span>)&#123;</span><br><span class="line">ans=max(ans,dp[n][<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">if</span>(n&gt;<span class="number">1</span>)&#123;</span><br><span class="line">ans=max(ans,dp[n<span class="number">-1</span>][<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n&gt;<span class="number">2</span>)&#123;</span><br><span class="line">ans=max(ans,dp[n<span class="number">-2</span>][<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">ans=max(ans,dp[n][<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">if</span>(n&gt;<span class="number">1</span>) ans=max(ans,dp[n<span class="number">-1</span>][<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;a-tle-week&quot;&gt;A TLE Week&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="Probelems" scheme="http://yoursite.com/tags/Probelems/"/>
    
  </entry>
  
  <entry>
    <title>2019 总结</title>
    <link href="http://yoursite.com/2020/04/08/2019Finals/"/>
    <id>http://yoursite.com/2020/04/08/2019Finals/</id>
    <published>2020-04-08T02:41:56.031Z</published>
    <updated>2020-04-08T03:10:09.150Z</updated>
    
    <content type="html"><![CDATA[<h2 id="总结">2019总结</h2><a id="more"></a><h2 id="一些奖项">一些奖项：</h2><ul><li>CCPC省赛: Gold Medal</li><li>ICPC省赛：Silver Medal</li><li>CCPC秦皇岛：Honorable Mention</li><li>ICPC亚洲区域赛宁夏：Gold Medal</li><li>ICPC EC-Final：Bronze Medal</li><li>ICPC-ID:<br /><img src="https://i.loli.net/2020/01/24/OFfbHRV4Tiv8kdB.png" alt="id.png" /></li></ul><h2 id="一些经历">一些经历</h2><ul><li><p>担任了一年的算法协会会长</p></li><li><p>组织策划了2019暑期集训</p></li><li><p>组织策划了积分赛</p></li><li><p>组织策划了第10届ACM校赛并放到了牛客网上重现：<a href="https://ac.nowcoder.com/acm/contest/3665" target="_blank" rel="noopener">网址</a></p></li><li><p>ICPC区域赛和郑大同时获得了河南首金</p></li><li><p>去看了大海</p></li><li><p>去银川吃了羊肉</p></li><li><p>再游了西安</p></li><li><p>刷新了坐火车最长时间的记录</p></li><li><p>登上了迎新晚会的舞台</p></li><li><p>自己挣到了一笔钱</p></li><li><p>大三上学期在最后两周独立完成了Web和数据库课程设计</p></li><li><p><strong>认识了一群志同道合的好朋友</strong></p></li></ul><h2 id="一些遗憾">一些遗憾</h2><ul><li>没有拿到奖学金</li><li>绩点再创新低（3.03）</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;总结&quot;&gt;2019总结&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="总结" scheme="http://yoursite.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Algorithms Weekly 3</title>
    <link href="http://yoursite.com/2020/04/08/Algorithmwk3/"/>
    <id>http://yoursite.com/2020/04/08/Algorithmwk3/</id>
    <published>2020-04-08T02:36:42.438Z</published>
    <updated>2020-05-16T11:03:51.186Z</updated>
    
    <content type="html"><![CDATA[<h2 id="an-april-fools-week">An April Fool's week</h2><a id="more"></a><ul><li><p><strong>Jordan Smiley(April Fools Day Contest 2020 E)</strong><br />给你一张图片，判断<span class="math inline">\((x,y)\)</span>是否在脸里面。。<br /><img src="https://espresso.codeforces.com/f5d68ed69f4ec8fcc71db0c55cf6acb9860b5e4a.png" width="30%"></p></li><li><p>step1:<br />利用画图工具将闭合区域填充:<br /><img src="https://i.loli.net/2020/04/02/pVWs5vOYxPdEeal.png" width="30%"></p></li><li><p>step2:<br />用pillow库将图片转为单通道图片并转为矩阵。<br /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">path=<span class="string">r"B.png"</span></span><br><span class="line"></span><br><span class="line">im = Image.open(path).convert(<span class="string">'L'</span>) <span class="comment">#三通道转多通道</span></span><br><span class="line">width = im.size[<span class="number">0</span>]   <span class="comment"># 获取宽度</span></span><br><span class="line">height = im.size[<span class="number">1</span>]   <span class="comment"># 获取高度</span></span><br><span class="line">im2 = im.resize((int(width*<span class="number">1</span>/<span class="number">15</span>), int(height*<span class="number">1</span>/<span class="number">15</span>)), Image.ANTIALIAS)<span class="comment"># 缩小15倍</span></span><br><span class="line">a=np.array(im2)</span><br><span class="line">np.savetxt(<span class="string">"1.txt"</span>,a)<span class="comment"># 颜色矩阵</span></span><br></pre></td></tr></table></figure><br />得到矩阵后，如果<span class="math inline">\((i,j)\)</span>处小于等于<span class="math inline">\(128\)</span>，设置为<span class="math inline">\(1\)</span>，否则为0，判断<span class="math inline">\((x,y)\)</span>处是<span class="math inline">\(0\)</span>还是<span class="math inline">\(1\)</span>即可。</p></li><li><p><strong>学军信友队趣味网络邀请赛</strong><br />Final standing:<br /><img src="https://img2020.cnblogs.com/blog/1923913/202004/1923913-20200407171551520-907262019.png" /></p></li><li><p>T1是一道巧妙的构造题。<br /><img src="https://img2020.cnblogs.com/blog/1923913/202004/1923913-20200407172734934-1096646969.png" width="30%"><br />对于上面的图，输出遍历完所有点的最短时间以及方案，其中最外圈是单向的，箭头所指即为方向，其余对角线之间的道路都是双向的，长度均为1。<br />可以肯定最短时间是<span class="math inline">\((n \cdot (n+1))-1\)</span><br />对于奇偶我们采用不同的方法讨论，以<span class="math inline">\(n=4\)</span>和<span class="math inline">\(n=5\)</span>为例。<br /><img src="https://img2020.cnblogs.com/blog/1923913/202004/1923913-20200407173537395-1206679429.png" width="30%"><br /><span class="math inline">\(n=4\)</span>的解法<br /><img src="https://img2020.cnblogs.com/blog/1923913/202004/1923913-20200407174103656-1303219727.png" width="30%"><br /><span class="math inline">\(n=5\)</span>的解法<br />对于<span class="math inline">\(n\)</span>为其他数字的情况，和<span class="math inline">\(n=4,5\)</span>的构造方法类似，奇偶讨论即可。<br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2020-04-05, 13:23:23</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;n*(n+<span class="number">1</span>)<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--) <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">' '</span>&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=n+<span class="number">1</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(j%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&amp;<span class="number">1</span>) <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">' '</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">' '</span>&lt;&lt;j+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&amp;<span class="number">1</span>) <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">' '</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">' '</span>&lt;&lt;j<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n+<span class="number">1</span>;j++) <span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">' '</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=n+<span class="number">1</span>;j&gt;=<span class="number">1</span>;j--)&#123;</span><br><span class="line"><span class="keyword">if</span>(j%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">' '</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">' '</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n+<span class="number">1</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(j&amp;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i<span class="number">-1</span>&lt;&lt;<span class="string">' '</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">' '</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p>T2是一个常见的的树形dp，即计算一棵树中每个节点所能到达的最远距离。<br />令<span class="math inline">\(f[i][0]\)</span>为<span class="math inline">\(i\)</span>向下走能走到的最远距离,<span class="math inline">\(f[i][1]\)</span>是次远距离，同时记录最远距离所经过的子节点，令<span class="math inline">\(f[i][2]\)</span>代表最终答案，<br />假设<span class="math inline">\(v\)</span>经过了<span class="math inline">\(u\)</span>向下走的最大路径，那么<span class="math inline">\(f[v][2]=max(f[u][2],f[u][1])+1\)</span>,否则<span class="math inline">\(f[v][2]=max(f[u][2],f[u][0])+1\)</span><br />两次<span class="math inline">\(DFS\)</span>转移即可。<br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  2020-04-05, 13:46:51</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">300000</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[N];</span><br><span class="line">ll f[N][<span class="number">3</span>];</span><br><span class="line">ll node[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> v:G[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line">dfs(v,u);</span><br><span class="line"><span class="keyword">if</span>(f[u][<span class="number">0</span>]&lt;=f[v][<span class="number">0</span>]+<span class="number">1</span>)&#123;</span><br><span class="line">f[u][<span class="number">1</span>]=f[u][<span class="number">0</span>];</span><br><span class="line">f[u][<span class="number">0</span>]=f[v][<span class="number">0</span>]+<span class="number">1</span>;</span><br><span class="line">node[u]=v;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(f[u][<span class="number">1</span>]&lt;f[v][<span class="number">0</span>]+<span class="number">1</span>)&#123;</span><br><span class="line">f[u][<span class="number">1</span>]=f[v][<span class="number">0</span>]+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> v:G[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(node[u]==v)&#123;</span><br><span class="line">f[v][<span class="number">2</span>]=max(f[u][<span class="number">2</span>],f[u][<span class="number">1</span>])+<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">f[v][<span class="number">2</span>]=max(f[u][<span class="number">2</span>],f[u][<span class="number">0</span>])+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">dfs2(v,u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="function"><span class="built_in">vector</span>&lt;ll&gt; <span class="title">w</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;w[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">rep(i,<span class="number">1</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;u,&amp;v);</span><br><span class="line">G[v].pb(u);</span><br><span class="line">G[u].pb(v);</span><br><span class="line">&#125;</span><br><span class="line">dfs(<span class="number">1</span>,<span class="number">-1</span>);</span><br><span class="line">dfs2(<span class="number">1</span>,<span class="number">-1</span>);</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">ans=max(ans,w[i]*max(f[i][<span class="number">2</span>],f[i][<span class="number">0</span>]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p><strong>2020算法首届算法竞赛网络挑战赛</strong><br />Final result:<br /><img src="https://img2020.cnblogs.com/blog/1923913/202004/1923913-20200407174755270-626790370.png" /></p></li><li><p><strong>30-Day LeetCoding Challenge</strong><br />前面的题目较为简单，不再赘述。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;an-april-fools-week&quot;&gt;An April Fool&#39;s week&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="Probelems" scheme="http://yoursite.com/tags/Probelems/"/>
    
  </entry>
  
  <entry>
    <title>Algorithms Weekly 2</title>
    <link href="http://yoursite.com/2020/04/08/Algorithmwk2/"/>
    <id>http://yoursite.com/2020/04/08/Algorithmwk2/</id>
    <published>2020-04-08T02:34:38.385Z</published>
    <updated>2020-04-13T03:44:29.562Z</updated>
    
    <content type="html"><![CDATA[<h2 id="a-slow-week">A slow week</h2><a id="more"></a><ul><li><strong>牛客练习赛60 C</strong></li></ul><p>对于一个长度为<span class="math inline">\(n\)</span>的字符串<span class="math inline">\(s\)</span>,计算有多少个长度为<span class="math inline">\(k\)</span>的本质不同的子序列。</p><p><strong>思路</strong><br /><span class="math inline">\(dp_{i,j}\)</span>为前<span class="math inline">\(i\)</span>个字符组成的字符串中长度为<span class="math inline">\(j\)</span>的本质不同的子序列。则有:<br /><span class="math display">\[dp_{i,j}=dp_{i-1,j-1}+dp_{i-1,j}-dp[last_{s_{i}}-1][j-1]\]</span><br />其中 <span class="math inline">\(last_{s_{i}}\)</span> 表示 <span class="math inline">\(s_{i}\)</span> 前一次出现的位置。时间复杂度<span class="math inline">\(O(n \cdot k)\)</span></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;a-slow-week&quot;&gt;A slow week&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="Probems" scheme="http://yoursite.com/tags/Probems/"/>
    
  </entry>
  
  <entry>
    <title>Algorithms Weekly 1</title>
    <link href="http://yoursite.com/2020/04/08/Algorithmwk1/"/>
    <id>http://yoursite.com/2020/04/08/Algorithmwk1/</id>
    <published>2020-04-08T02:31:15.498Z</published>
    <updated>2020-04-13T03:44:32.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="a-happy-week">A happy week</h2><a id="more"></a><ul><li><p><strong>牛客小白月赛23:Problem G.</strong><br />有一棵包含<span class="math inline">\(n\)</span>个节点和<span class="math inline">\(n-1\)</span>条边的树，规定树链<span class="math inline">\((u,v)\)</span>为树上从<span class="math inline">\(u\)</span>到<span class="math inline">\(v\)</span>的简单路径。<br />树的每条边上都有一个正整数，这个正整数被称作这条边的颜色，规定一条树链的权值<span class="math inline">\(w(u,v)\)</span>为这条树链上所有边的颜色的代数和。<br />而整棵树的权值为所有不同的树链的权值的代数和。<br />已知所有边的颜色集合恰好为<span class="math inline">\(1\)</span>到<span class="math inline">\(n-1\)</span>这<span class="math inline">\(n-1\)</span>个不同的正整数，请你为每条边安排一种颜色，使得这棵树的权值尽量小，你不需要给出具体方案，只需要求出这个最小的权值即可。<br /><strong>思路:</strong><br />计算每条边的贡献:边<span class="math inline">\((u,v)\)</span>的贡献为<span class="math inline">\((n-siz_{u}) \cdot siz_{u}\)</span>，其中<span class="math inline">\(siz_{i}\)</span>为<span class="math inline">\(i\)</span>节点为根的子树的大小。按贡献从大到小排序后分配给<span class="math inline">\(1,2..,n-1\)</span>即可。时间复杂度<span class="math inline">\(O(n\cdot log(n))\)</span></p></li><li><p><strong>Leetcode181 T3</strong><br />给定<span class="math inline">\(6\)</span>种道路，按照数据所给的<span class="math inline">\(n \cdot m\)</span>矩阵排列能否从<span class="math inline">\((0,0)\)</span>到达<span class="math inline">\((n-1,m-1)\)</span>。<br /><strong>思路:</strong><br />BFS即可，对于每一块的四周判断可不可以走。</p></li><li><p><strong>KickStart RoundA T2</strong><br />一个<span class="math inline">\(n \cdot m\)</span>的方格阵，每个方格都有一个值，对于每一行来说，你只能从第一块开始拿，不能跳过某一块，整个方阵最多可以拿<span class="math inline">\(k\)</span>块，使这<span class="math inline">\(k\)</span>块的值的和最大。<br /><strong>思路</strong><br />dp，令<span class="math inline">\(dp_{i,j,k}\)</span>代表拿到第<span class="math inline">\(i\)</span>行，第<span class="math inline">\(i\)</span>行拿了<span class="math inline">\(j\)</span>个，总共拿了<span class="math inline">\(k\)</span>个的最大值。<span class="math inline">\((nm)^2\)</span>转移即可。<br /><strong>代码</strong><br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">* @createTime:  time</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; VII;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> dp[<span class="number">60</span>][<span class="number">40</span>][<span class="number">2000</span>];<span class="comment">//dp[i][j][k]表示第i行拿j个总共k个的最大值</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[N][N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> pre[N][N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">int</span> cas=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="keyword">int</span> n,k,p;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k&gt;&gt;p;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">pre[i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">rep(j,<span class="number">1</span>,k)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i][j];</span><br><span class="line">pre[i][j]=pre[i][j<span class="number">-1</span>]+a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;<span class="comment">//第i行</span></span><br><span class="line">rep(j,<span class="number">0</span>,k)&#123;</span><br><span class="line">rep(u,<span class="number">0</span>,k)&#123;</span><br><span class="line">rep(last,<span class="number">0</span>,p)&#123;</span><br><span class="line">dp[i][j][last+j]=max(dp[i<span class="number">-1</span>][u][last]+pre[i][j],dp[i][j][last+j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">rep(j,<span class="number">0</span>,k)&#123;</span><br><span class="line">ans=max(ans,dp[i][j][p]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case #%d: %lld\n"</span>,cas++,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p><strong>KickStart RoundA T3</strong><br /><span class="math inline">\(n\)</span>个木棒，可以切<span class="math inline">\(k\)</span>次，随便切，问切割后最长的木棒最短为多少<br /><strong>思路：</strong><br />二分最大值<span class="math inline">\(x\)</span>，假设第<span class="math inline">\(i\)</span>个木棒的长度为<span class="math inline">\(l_{i}\)</span>，则可计算出该木棒至少切割几次才能让最大值小于等于<span class="math inline">\(x\)</span>，判断总次数是否小于等于<span class="math inline">\(k\)</span>即可。</p></li><li><p><strong>ABC159 E</strong><br />一个<span class="math inline">\(n \cdot m\)</span>的矩阵，如果<span class="math inline">\((i,j)\)</span>处为<span class="math inline">\(1\)</span>则是白色，为<span class="math inline">\(0\)</span>则是黑色，现在你可以对这个矩阵横竖切割，最终要使得切割后的每一块的黑色面积小于等于<span class="math inline">\(k\)</span>，计算至少需要多少次。其中<span class="math inline">\(1 \leq n \leq 10, 1\leq m \leq 1000\)</span>。<br /><strong>思路:</strong><br /><span class="math inline">\(2^{n-1}\)</span>枚举横着切的所有情况，贪心的计算竖着的刀数即可。时间复杂度<span class="math inline">\(O(2^{n-1} \cdot n \cdot m)\)</span><br /><strong>代码</strong><br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @author:  codancer</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=(a);i&lt;=(b);i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fep(i,a,b) for(int i=(a);i&gt;=(b);i--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">char</span> maze[<span class="number">20</span>][<span class="number">3000</span>];</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">3000</span>][<span class="number">20</span>];<span class="comment">//第j列的前i行的前缀和</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">rep(j,<span class="number">1</span>,m)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;maze[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">rep(j,<span class="number">1</span>,m)&#123;</span><br><span class="line">c[j][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">rep(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">c[j][i]=c[j][i<span class="number">-1</span>]+(maze[i][j]-<span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;(n<span class="number">-1</span>));i++)&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; lc;</span><br><span class="line"><span class="keyword">int</span> now=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(n<span class="number">-1</span>);j++)&#123;</span><br><span class="line"><span class="keyword">if</span>((i&gt;&gt;j)&amp;<span class="number">1</span>)&#123;</span><br><span class="line">lc.pb(j+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> siz=(<span class="keyword">int</span>)lc.size();</span><br><span class="line">now+=siz;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; sq;<span class="comment">//第i块的区间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(siz==<span class="number">0</span>)&#123;<span class="comment">//不切 </span></span><br><span class="line">sq.pb(&#123;<span class="number">1</span>,n&#125;);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">sq.pb(&#123;<span class="number">1</span>,lc[<span class="number">0</span>]&#125;);</span><br><span class="line">rep(j,<span class="number">1</span>,siz<span class="number">-1</span>)&#123;</span><br><span class="line">sq.pb(&#123;lc[j<span class="number">-1</span>]+<span class="number">1</span>,lc[j]&#125;);</span><br><span class="line">&#125; </span><br><span class="line">sq.pb(&#123;lc[siz<span class="number">-1</span>]+<span class="number">1</span>,n&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//先检验横着划分的可行性 </span></span><br><span class="line"><span class="keyword">bool</span> flag=<span class="number">1</span>;</span><br><span class="line">rep(j,<span class="number">1</span>,m)&#123;</span><br><span class="line">rep(d,<span class="number">0</span>,siz)&#123;</span><br><span class="line"><span class="keyword">int</span> up=sq[d].first;</span><br><span class="line"><span class="keyword">int</span> down=sq[d].second;</span><br><span class="line"><span class="keyword">if</span>(c[j][down]-c[j][up<span class="number">-1</span>]&gt;k)&#123;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cout&lt;&lt;sq.size()&lt;&lt;' '&lt;&lt;now&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//for(auto v:sq)&#123;</span></span><br><span class="line"><span class="comment">//cout&lt;&lt;v.first&lt;&lt;"---"&lt;&lt;v.second&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">tmp</span><span class="params">(siz+<span class="number">1</span>,<span class="number">0</span>)</span></span>;<span class="comment">//第i块当前白色的数量 </span></span><br><span class="line">rep(j,<span class="number">1</span>,m)&#123;</span><br><span class="line"><span class="keyword">bool</span> ok=<span class="number">1</span>;</span><br><span class="line">rep(d,<span class="number">0</span>,siz)&#123;</span><br><span class="line"><span class="keyword">int</span> up=sq[d].first;</span><br><span class="line"><span class="keyword">int</span> down=sq[d].second;</span><br><span class="line"><span class="keyword">if</span>(tmp[d]+c[j][down]-c[j][up<span class="number">-1</span>]&gt;k)&#123;</span><br><span class="line">ok=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">tmp[d]+=(c[j][down]-c[j][up<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ok==<span class="number">0</span>)&#123;</span><br><span class="line">++now;</span><br><span class="line">rep(d,<span class="number">0</span>,siz)&#123;</span><br><span class="line"><span class="keyword">int</span> up=sq[d].first;</span><br><span class="line"><span class="keyword">int</span> down=sq[d].second;</span><br><span class="line">tmp[d]=c[j][down]-c[j][up<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=min(ans,now);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;a-happy-week&quot;&gt;A happy week&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="Problems" scheme="http://yoursite.com/tags/Problems/"/>
    
  </entry>
  
  <entry>
    <title>对主席树的理解以及使用</title>
    <link href="http://yoursite.com/2020/04/07/%E4%B8%BB%E5%B8%AD%E6%A0%91/"/>
    <id>http://yoursite.com/2020/04/07/%E4%B8%BB%E5%B8%AD%E6%A0%91/</id>
    <published>2020-04-07T14:14:14.936Z</published>
    <updated>2020-04-08T02:21:24.123Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对主席树的理解以及使用">对主席树的理解以及使用</h1><p><a id="more"></a></p><h2 id="引入">引入</h2><p>一个长度为<span class="math inline">\(n\)</span>的数组，有<span class="math inline">\(m\)</span>次查询，每次查询区间<span class="math inline">\([l,r]\)</span>内第<span class="math inline">\(k\)</span>小的元素。</p><p>如果使用暴力，肯定不可以</p><p>使用线段树？可是我只会查询区间最值啊。</p><p>那么我们把问题再次简化一下，查询<span class="math inline">\([1,n]\)</span>第<span class="math inline">\(k\)</span>小的元素，要求使用线段树来实现。</p><h2 id="权值线段树">权值线段树</h2><p>为了解决这个问题，我们引入一个名词:<strong>权值线段树</strong>。那么权值线段树是如何解决上面那个问题的呢？</p><p>首先，我们对数组进行离散化处理，离散成为<span class="math inline">\([1,n]\)</span>，然后我们建一颗线段树，线段树的节点存放的即为对应区间的数的个数。</p><p>比如数组<span class="math inline">\(a={3,3,2,2}\)</span>,经过离散化后变为<span class="math inline">\(2,2,1,1\)</span>。</p><p>对应的线段树即为：</p><p><img src="https://i.loli.net/2019/07/30/5d3feb07f205312086.png" /></p><p>建好线段树之后我们如何求解第<span class="math inline">\(k\)</span>小元素呢？我们从根节点出发，看下它的左儿子的元素个数是否超过了<span class="math inline">\(k\)</span>，如果超过了<span class="math inline">\(k\)</span>，那么第<span class="math inline">\(k\)</span>小一定是左儿子的第<span class="math inline">\(k\)</span>小，我们直接去访问左儿子，否则，假设左儿子的节点为<span class="math inline">\(num\)</span>，那么第<span class="math inline">\(k\)</span>小一定是右儿子的第<span class="math inline">\(k-num\)</span>小，我们去访问右儿子，直到递归终止，我们便找到了第<span class="math inline">\(k\)</span>小元素。</p><h2 id="主席树">主席树</h2><p>当我们解决了上一个问题，我们这样考虑：</p><p>每输入一个数字<span class="math inline">\(a_i\)</span>，就建一棵<span class="math inline">\([1,i]\)</span>的权值线段树，那么如果要查询<span class="math inline">\([l,r]\)</span>的区间第<span class="math inline">\(k\)</span>小，直接让这两棵权值线段树做差，然后进行我们上面设计的算法，问题不久迎刃而解了吗？</p><p>但是，每建一棵树，这样<span class="math inline">\(n\)</span>棵树的空间会达到<span class="math inline">\(O(n^2)\)</span>的级别，空间是无法承受的。我们这样想，假设你输入了<span class="math inline">\(a_i\)</span>，并且你已经建好了<span class="math inline">\(a_{i-1}\)</span>的线段树，是不是<span class="math inline">\(a_i\)</span>和<span class="math inline">\(a_{i-1}\)</span>的线段树只会有<span class="math inline">\(log\)</span>级别的点是不同的，剩下的大部分都是完全一致的。利用这个性质，我们不再开辟新的线段树，而是先把<span class="math inline">\(a_i\)</span>会改变掉的节点复制一份，然后对复制的节点进行修改，连接到上次构建好的线段树上，这样我们只用了<span class="math inline">\(log\)</span>的空间。最终我们构造的这棵树就叫主席树（其实已经不是一棵树了）。点的个数最多为<span class="math inline">\(O(nlog(n))\)</span>。</p><h2 id="建立过程">建立过程</h2><p>对于数组<span class="math inline">\(a:3,3,2,2\)</span>建立主席树:</p><p>第一步：离散化为<span class="math inline">\(2,2,1,1\)</span><br />第二步：输入<span class="math inline">\(2\)</span>，构造权值线段树</p><p><img src="https://i.loli.net/2019/07/30/5d3ff004ecc4522556.png" /></p><p>第三步：输入2</p><p><img src="https://i.loli.net/2019/07/30/5d3ff0bc8bb4530476.png" alt="2.png" /></p><p>第四步:输入1</p><p><img src="https://i.loli.net/2019/07/30/5d3ff2433ccd810571.png" alt="3.png" /></p><p>第五步:输入1</p><p><img src="https://i.loli.net/2019/07/30/5d3ff2e2ec71e19358.png" alt="4.png" /></p><p>这样我们就构造了一个主席树（有点丑），然后对于要查询的区间<span class="math inline">\([l,r]\)</span>，我们只需要从他们各自的"根"出发，递归做差寻找第<span class="math inline">\(k\)</span>大即可。图中四个根分别为<span class="math inline">\(1,4,7,10\)</span>。</p><h2 id="代码">代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ll N = <span class="number">5e5</span>+<span class="number">100</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt; v;</span><br><span class="line">ll a[N],roots[N],cnt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">ll l,r,num;</span><br><span class="line">&#125;T[N*<span class="number">25</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(ll l,ll r,ll &amp;x,ll y,ll pos)</span></span>&#123;</span><br><span class="line">T[++cnt]=T[y];T[cnt].num++;x=cnt;<span class="comment">//复制节点并且更新</span></span><br><span class="line"><span class="keyword">if</span>(l==r) <span class="keyword">return</span> ;</span><br><span class="line">ll mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(mid&gt;=pos) update(l,mid,T[x].l,T[y].l,pos);</span><br><span class="line"><span class="keyword">else</span> update(mid+<span class="number">1</span>,r,T[x].r,T[y].r,pos);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">query</span><span class="params">(ll l,ll r,ll x,ll y,ll k)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l==r) <span class="keyword">return</span> l;</span><br><span class="line">ll sum=T[T[y].l].num-T[T[x].l].num;</span><br><span class="line">ll mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(sum&gt;=k) <span class="keyword">return</span> query(l,mid,T[x].l,T[y].l,k);<span class="comment">//第$k$小在左子树</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> query(mid+<span class="number">1</span>,r,T[x].r,T[y].r,k-sum);<span class="comment">//在右子树</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">getid</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> lower_bound(v.begin(),v.end(),x)-v.begin()+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line">ll n,m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;n,&amp;m);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]),v.push_back(a[i]);</span><br><span class="line">sort(v.begin(),v.end());</span><br><span class="line"></span><br><span class="line">v.erase(unique(v.begin(),v.end()),v.end());<span class="comment">//离散化</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++) update(<span class="number">1</span>,n,roots[i],roots[i<span class="number">-1</span>],getid(a[i]));</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">ll l,r,k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;l,&amp;r,&amp;k);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,v[query(<span class="number">1</span>,n,roots[l<span class="number">-1</span>],roots[r],k)<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;对主席树的理解以及使用&quot;&gt;对主席树的理解以及使用&lt;/h1&gt;
&lt;p&gt;
    
    </summary>
    
    
    
      <category term="数据结构" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>浅谈序列自动机</title>
    <link href="http://yoursite.com/2020/04/07/SuATM/"/>
    <id>http://yoursite.com/2020/04/07/SuATM/</id>
    <published>2020-04-07T14:14:14.928Z</published>
    <updated>2019-07-24T01:05:38.126Z</updated>
    
    <content type="html"><![CDATA[<h1 id="浅谈序列自动机">浅谈序列自动机</h1><a id="more"></a><h2 id="简介">简介</h2><p>序列自动机是一个可以快速判断字符串<span class="math inline">\(t\)</span>是否是字符串<span class="math inline">\(s\)</span>的子串的一个算法。</p><h2 id="构造">构造</h2><p>对<span class="math inline">\(s\)</span>构造序列自动机，使用<span class="math inline">\(Nxt_{i,j}\)</span>代表从第<span class="math inline">\(i\)</span>个位置开始，字符<span class="math inline">\(j\)</span>出现的第一个位置。我们倒着遍历更新即可。<br /><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">int nxt[N][27];</span><br><span class="line">void init(char *s)&#123;</span><br><span class="line">int l&#x3D;strlen(s);</span><br><span class="line">for(int i&#x3D;0;i&lt;26;i++) nxt[l][i]&#x3D;INF;</span><br><span class="line">for(int i&#x3D;l-1;i&gt;&#x3D;0;i--)&#123;</span><br><span class="line">for(int j&#x3D;0;j&lt;26;j++)&#123;</span><br><span class="line">nxt[i][j]&#x3D;nxt[i+1][j];</span><br><span class="line">&#125;</span><br><span class="line">nxt[i][s[i]-&#39;a&#39;]&#x3D;i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="查询">查询</h2><p>设置初始指针<span class="math inline">\(p\)</span>为-1，每次让<span class="math inline">\(p\)</span>跳到<span class="math inline">\(Nxt_{p+1,j}\)</span>上面，<span class="math inline">\(j\)</span>为当前查询的字符，如果<span class="math inline">\(p\)</span>为<span class="math inline">\(INF\)</span>,则说明找不到下一个字符，即<span class="math inline">\(t\)</span>不是<span class="math inline">\(s\)</span>的子串。<br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">find</span><span class="params">(<span class="keyword">char</span> *t)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> pos=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> l=<span class="built_in">strlen</span>(t);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;i++)&#123;</span><br><span class="line">pos=nxt[pos+<span class="number">1</span>][t[i]-<span class="string">'a'</span>];</span><br><span class="line"><span class="keyword">if</span>(pos==INF) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="模板">模板</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sub_AM</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> nxt[N][<span class="number">27</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) nxt[l][i]=INF;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=l<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;j++)&#123;</span><br><span class="line">nxt[i][j]=nxt[i+<span class="number">1</span>][j];</span><br><span class="line">&#125;</span><br><span class="line">nxt[i][s[i]-<span class="string">'a'</span>]=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">find</span><span class="params">(<span class="keyword">char</span> *t)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> pos=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> l=<span class="built_in">strlen</span>(t);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;i++)&#123;</span><br><span class="line">pos=nxt[pos+<span class="number">1</span>][t[i]-<span class="string">'a'</span>];</span><br><span class="line"><span class="keyword">if</span>(pos==INF) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;solve;</span><br></pre></td></tr></table></figure><h2 id="problems">Problems</h2><p><a href="https://nanti.jisuanke.com/t/38232" target="_blank" rel="noopener">计蒜客 Subsquenece</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="keyword">char</span> t[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sub_AM</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> nxt[N][<span class="number">27</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) nxt[l][i]=INF;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=l<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;j++)&#123;</span><br><span class="line">nxt[i][j]=nxt[i+<span class="number">1</span>][j];</span><br><span class="line">&#125;</span><br><span class="line">nxt[i][s[i]-<span class="string">'a'</span>]=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">find</span><span class="params">(<span class="keyword">char</span> *t)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> pos=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> l=<span class="built_in">strlen</span>(t);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;i++)&#123;</span><br><span class="line">pos=nxt[pos+<span class="number">1</span>][t[i]-<span class="string">'a'</span>];</span><br><span class="line"><span class="keyword">if</span>(pos==INF) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;solve;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">solve.init(s);</span><br><span class="line"><span class="keyword">int</span> q;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line"><span class="keyword">while</span>(q--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,t);</span><br><span class="line"><span class="keyword">if</span>(solve.find(t))&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;浅谈序列自动机&quot;&gt;浅谈序列自动机&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="字符串算法" scheme="http://yoursite.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>2019牛客暑期多校D.Big Integer</title>
    <link href="http://yoursite.com/2020/04/07/nowcoder3D/"/>
    <id>http://yoursite.com/2020/04/07/nowcoder3D/</id>
    <published>2020-04-07T14:14:14.925Z</published>
    <updated>2019-08-05T12:31:12.666Z</updated>
    
    <content type="html"><![CDATA[<h1 id="牛客暑期多校d.big-integer">2019牛客暑期多校D.Big Integer</h1><a id="more"></a><h2 id="题面"><a href="https://ac.nowcoder.com/acm/contest/883/D" target="_blank" rel="noopener">题面</a></h2><h2 id="题意">题意：</h2><p>定义<span class="math inline">\(A(n)\)</span>为<span class="math inline">\(n\)</span>个1构成的数字，如<span class="math inline">\(A(3)=111\)</span>，计算有多少对<span class="math inline">\((i,j)\)</span>使得<span class="math inline">\(A(i^j) \% p = 0\)</span>。</p><h2 id="思路">思路：</h2><p>通过枚举发现是有上面的等式是有循环节的，而且循环节是<span class="math inline">\(p-1\)</span>的因子，因此暴力枚举计算出循环节<span class="math inline">\(d\)</span>，接下来就是求有多少对<span class="math inline">\(i^j \% d=0\)</span>。<br />将<span class="math inline">\(d\)</span>进行质因子分解，得<br /><span class="math display">\[d={p_1}^{q_1} \cdot {p_2}^{q_2} \cdot {p_3}^{q_3} ...{p_k}^{q_k}\]</span></p><p>那么要使<span class="math inline">\(i^j \%d = 0\)</span>，则<span class="math inline">\(i\)</span>必须为<br /><span class="math display">\[g={p_1}^{\lceil {\frac{q_1}{j}} \rceil} \cdot {p_2}^{\lceil {\frac{q_2}{j}} \rceil} \cdot {p_3}^{\lceil {\frac{q_3}{j}} \rceil} ...{p_k}^{\lceil {\frac{q_k}{j}} \rceil}\]</span><br />的倍数。因此一共有<span class="math inline">\(\frac{n}{g}\)</span>个合法的<span class="math inline">\(i\)</span><br />由于<span class="math inline">\(q_i \leq 30\)</span>，因此<span class="math inline">\(j\)</span>在<span class="math inline">\(30\)</span>之后和<span class="math inline">\(30\)</span>的答案相同，因此<span class="math inline">\(j\)</span>只需要枚举到<span class="math inline">\([1,30]\)</span>，分别计算出<span class="math inline">\(g\)</span>的值。</p><h2 id="代码">代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">qpow</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> mod)</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ans%mod*a%mod)%mod;</span><br><span class="line">        a=(a%mod*a%mod)%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">qp</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(b)&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ans*a);</span><br><span class="line">a=(a*a);</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="comment">//freopen("1.in","r",stdin);</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> p,n,m;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>&gt; pr;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> re;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld"</span>,&amp;p,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">if</span>(p==<span class="number">2</span>||p==<span class="number">5</span>)&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p==<span class="number">3</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;n/<span class="number">3</span>*m&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>&gt; all;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=p<span class="number">-1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((p<span class="number">-1</span>)%i==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i*i==p<span class="number">-1</span>) all.push_back(i);</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    all.push_back(i);</span><br><span class="line">                    all.push_back((p<span class="number">-1</span>)/i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        all.push_back(p<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> id;<span class="comment">//循环节</span></span><br><span class="line">        sort(all.begin(),all.end());</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> v:all)&#123;<span class="comment">//找到循环节</span></span><br><span class="line">            <span class="keyword">if</span>((qpow(<span class="number">10</span>,v,p))%p==<span class="number">1</span>)&#123;</span><br><span class="line">                id=v;<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>&gt; nums;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=id;i++)&#123;<span class="comment">//质因子分解</span></span><br><span class="line">            <span class="keyword">if</span>(id%i==<span class="number">0</span>)&#123;</span><br><span class="line">             <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">                pr.push_back(i);</span><br><span class="line">                <span class="keyword">while</span>(id%i==<span class="number">0</span>)&#123;</span><br><span class="line">                 id/=i;</span><br><span class="line">                 num++;</span><br><span class="line">                &#125;</span><br><span class="line">                nums.push_back(num);</span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(id!=<span class="number">1</span>)&#123;</span><br><span class="line">         pr.push_back(id);</span><br><span class="line">         nums.push_back(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> g;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> j=<span class="number">1</span>;j&lt;=min((<span class="keyword">long</span> <span class="keyword">long</span>)m,(<span class="keyword">long</span> <span class="keyword">long</span>)<span class="number">30</span>);j++)&#123;</span><br><span class="line">        g=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="keyword">int</span>)nums.size();i++)&#123;</span><br><span class="line">        g*=qp(pr[i],(nums[i]+j<span class="number">-1</span>)/j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">30</span>) ans+=(n/g)*(m<span class="number">-29</span>);</span><br><span class="line">        <span class="keyword">else</span> ans+=n/g;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;牛客暑期多校d.big-integer&quot;&gt;2019牛客暑期多校D.Big Integer&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="数学" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>矩阵分解推荐算法（LMF）</title>
    <link href="http://yoursite.com/2020/04/07/MF/"/>
    <id>http://yoursite.com/2020/04/07/MF/</id>
    <published>2020-04-07T14:14:14.922Z</published>
    <updated>2019-05-21T13:17:17.525Z</updated>
    
    <content type="html"><![CDATA[<h1 id="矩阵分解推荐算法lmf">矩阵分解推荐算法（LMF）</h1><a id="more"></a><p>首先我们现在有一个矩阵<span class="math inline">\(R_{mn}\)</span>，其中<span class="math inline">\(R_{ij}\)</span>代表第<span class="math inline">\(i\)</span>个用户对第<span class="math inline">\(j\)</span>个商品的喜爱程度。</p><span class="math inline">\(LMF\)</span>算法认为每个商品上面都有一些隐因子，而顾客的喜爱程度是由这些隐因子来决定的。因此便可以将<span class="math inline">\(R_{mn}\)</span>分解成<span class="math inline">\(P_{mF} \times Q_{Fn}\)</span>的形式。<br />矩阵<span class="math inline">\(P_{mF}\)</span>代表了这<span class="math inline">\(m\)</span>个用户对<span class="math inline">\(F\)</span>个隐因子的喜爱程度，<span class="math inline">\(Q_{Fn}\)</span>代表这<span class="math inline">\(F\)</span>个隐因子在这<span class="math inline">\(n\)</span>个商品上的分布概率。<br /><center><span class="math inline">\(R&#39;_{ij}=\sum_{f=1}^F {P_{if}Q_{fj}}\)</span></center>我们最终的目的是使得<span class="math inline">\(R_{ij}\)</span>和<span class="math inline">\(R&#39;_ {ij}\)</span>尽可能的相近。因此，损失函数为:<br /><center><span class="math inline">\(f(P,Q)=\sum{(R_{ij}-R&#39;_{ij})^2}\)</span></center><p>为了防止过拟合，需要加上一个正则项来防止<span class="math inline">\(P_{if},Q_{fj}\)</span>过小或过大。</p><center><span class="math inline">\(f(P,Q)=\sum{(R_{ij}-R&#39;_{ij})^2}+\lambda(\sum{(P_{if}^2}+\sum{Q_{fj}^2})\)</span></center>接下来就是对这个函数用梯度下降进行拟合，递推式为：<br /><center><span class="math inline">\(P_{k+1}=P_{k}-\alpha\frac{\partial f(P,Q)}{\partial P_k}\)</span></center><center><span class="math inline">\(Q_{k+1}=Q_{k}-\alpha\frac{\partial f(P,Q)}{\partial Q_k}\)</span></center><p>这样我们采用梯度下降算法即可获得<span class="math inline">\(R&#39;\)</span>矩阵<br /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="comment">##将R_nm分解成P_nk*Q_km</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MF</span><span class="params">(R,P,Q,K,times=<span class="number">100000</span>,alp=<span class="number">0.0001</span>,lb=<span class="number">0.01</span>)</span>:</span></span><br><span class="line">  <span class="comment">#  Q=Q.T</span></span><br><span class="line">    <span class="keyword">for</span> steps <span class="keyword">in</span> range(times):<span class="comment"># 迭代次数</span></span><br><span class="line">        <span class="keyword">for</span> u <span class="keyword">in</span> range(len(R)):</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(R[u])):</span><br><span class="line">                <span class="keyword">if</span> R[u][i]&gt;<span class="number">0</span>:</span><br><span class="line">                    delta=R[u][i]-numpy.dot(P[u,:],Q[:,i])</span><br><span class="line">                <span class="keyword">for</span> f <span class="keyword">in</span> range(K):</span><br><span class="line">                    P[u][f]=P[u][f]+<span class="number">2</span>*alp*(delta*Q[f][i]-lb*P[u][f])<span class="comment">#递推运算</span></span><br><span class="line">                    Q[f][i]=Q[f][i]+<span class="number">2</span>*alp*(delta*P[u][f]-lb*Q[f][i])</span><br><span class="line">    <span class="keyword">return</span> P,Q</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    R=[</span><br><span class="line">        [<span class="number">5</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">        [<span class="number">4</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">        [<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">5</span>],</span><br><span class="line">        [<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">4</span>],</span><br><span class="line">        [<span class="number">0</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">4</span>]</span><br><span class="line">    ]</span><br><span class="line">    K=<span class="number">2</span></span><br><span class="line">    n=len(R)</span><br><span class="line">    m=len(R[<span class="number">0</span>])</span><br><span class="line">    <span class="comment">##随机生成P,Q矩阵</span></span><br><span class="line">    P=numpy.random.rand(n,K)</span><br><span class="line">    Q=numpy.random.rand(K,m)</span><br><span class="line">    <span class="comment">##矩阵分解</span></span><br><span class="line">    ansp,ansq=MF(R,P,Q,K)</span><br><span class="line">    ansR=numpy.dot(ansp,ansq)</span><br><span class="line">    print(ansR)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;矩阵分解推荐算法lmf&quot;&gt;矩阵分解推荐算法（LMF）&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="Machine Learning" scheme="http://yoursite.com/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>网络流24题</title>
    <link href="http://yoursite.com/2020/04/07/Maxflow/"/>
    <id>http://yoursite.com/2020/04/07/Maxflow/</id>
    <published>2020-04-07T14:14:14.920Z</published>
    <updated>2019-10-10T08:45:25.637Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络流24题">网络流24题</h1><a id="more"></a><h2 id="搭配飞行员"><a href="https://loj.ac/problem/6000" target="_blank" rel="noopener">搭配飞行员</a></h2><h2 id="题解">题解：</h2><p>二分图最大匹配，从<span class="math inline">\(S\)</span>往每个正驾驶连接一条流量为<span class="math inline">\(1\)</span>的边，从每个副驾驶往<span class="math inline">\(T\)</span>连接一条流量为<span class="math inline">\(1\)</span>的边，两个可以配合的飞行员之间连接一条流量为<span class="math inline">\(1\)</span>的边,跑最大流即可。</p><h2 id="代码">代码:</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> S,T,n,m,w[N],dep[N],head[N],to[N],num=<span class="number">1</span>,sum=<span class="number">0</span>,x,nxt[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> ww)</span></span>&#123;</span><br><span class="line">    num++;</span><br><span class="line">    to[num]=v;nxt[num]=head[u];w[num]=ww;head[u]=num;</span><br><span class="line">    num++;</span><br><span class="line">    to[num]=u;nxt[num]=head[v];w[num]=<span class="number">0</span>;head[v]=num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) q.pop();</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) q.pop();</span><br><span class="line">    vis[S]=<span class="number">1</span>;q.push(S);dep[S]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u=q.front();q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=nxt[i])&#123;</span><br><span class="line">            <span class="keyword">int</span> v=to[i];</span><br><span class="line">            <span class="keyword">if</span>(vis[v]||w[i]&lt;=<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            dep[v]=dep[u]+<span class="number">1</span>;</span><br><span class="line">            vis[v]=<span class="number">1</span>;q.push(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> vis[T];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==T||d==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=nxt[i])&#123;</span><br><span class="line">        <span class="keyword">int</span> v=to[i];</span><br><span class="line">        <span class="keyword">if</span>(dep[v]!=dep[u]+<span class="number">1</span>||w[i]&lt;=<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> flow=dfs(v,min(d,w[i]));</span><br><span class="line">        d-=flow;ret+=flow;</span><br><span class="line">        w[i]-=flow;w[i^<span class="number">1</span>]+=flow;</span><br><span class="line">        <span class="keyword">if</span>(d==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ret==<span class="number">0</span>) dep[u]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    S=<span class="number">0</span>;T=n+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> u,v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) add(S,i,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=m+<span class="number">1</span>;i&lt;=n;i++) add(i,T,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;u,&amp;v))&#123;</span><br><span class="line">        add(u,v,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(bfs()) sum+=dfs(S,INF);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="太空飞行计划"><a href="https://loj.ac/problem/6001" target="_blank" rel="noopener">太空飞行计划</a></h2><h2 id="题解-1">题解：</h2><p>最大权闭合子图，设<span class="math inline">\(V&#39;\)</span>为<span class="math inline">\(G(V,E)\)</span>的一个点集，如果<span class="math inline">\(V\)</span>中对于每个点的所有的出边所到达的点也<span class="math inline">\(\in V&#39;\)</span>，那么<span class="math inline">\(V&#39;\)</span>即为一个闭合子图，最大权闭合子图即为所有的闭合子图中权值和最大的。</p><p>定理：从<span class="math inline">\(S\)</span>向所有权值为正数的点增加一条等于该点点权的流量的边，从所有权值为负数的点向<span class="math inline">\(T\)</span>增加一条等于该点权绝对值流量的边，对于<span class="math inline">\(u(w_{u}&gt;0)\)</span>，假设完成<span class="math inline">\(u\)</span>需要集合<span class="math inline">\(I_{u}\)</span>，则对<span class="math inline">\(v \in I_{u}\)</span>连接一条权值流量为<span class="math inline">\(inf\)</span>的边，跑一边最小割即可。</p><p>意义：割掉<span class="math inline">\(S-&gt;u\)</span>代表不进行任务<span class="math inline">\(u\)</span>，割掉<span class="math inline">\(v-&gt;T\)</span>代表需要使用<span class="math inline">\(v\)</span>，最后<span class="math inline">\(S\)</span>可达的即为要选择的。</p><h2 id="代码-1">代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> S,T,n,m,w[N],dep[N],head[N],to[N],num=<span class="number">1</span>,sum=<span class="number">0</span>,x,nxt[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> ww)</span></span>&#123;</span><br><span class="line">    num++;</span><br><span class="line">    to[num]=v;nxt[num]=head[u];w[num]=ww;head[u]=num;</span><br><span class="line">    num++;</span><br><span class="line">    to[num]=u;nxt[num]=head[v];w[num]=<span class="number">0</span>;head[v]=num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) q.pop();</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) q.pop();</span><br><span class="line">    vis[S]=<span class="number">1</span>;q.push(S);dep[S]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u=q.front();q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=nxt[i])&#123;</span><br><span class="line">            <span class="keyword">int</span> v=to[i];</span><br><span class="line">            <span class="keyword">if</span>(vis[v]||w[i]&lt;=<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            dep[v]=dep[u]+<span class="number">1</span>;</span><br><span class="line">            vis[v]=<span class="number">1</span>;q.push(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> vis[T];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==T||d==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=nxt[i])&#123;</span><br><span class="line">        <span class="keyword">int</span> v=to[i];</span><br><span class="line">        <span class="keyword">if</span>(dep[v]!=dep[u]+<span class="number">1</span>||w[i]&lt;=<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> flow=dfs(v,min(d,w[i]));</span><br><span class="line">        d-=flow;ret+=flow;</span><br><span class="line">        w[i]-=flow;w[i^<span class="number">1</span>]+=flow;</span><br><span class="line">        <span class="keyword">if</span>(d==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ret==<span class="number">0</span>) dep[u]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">1000</span>],p[<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    S=n+m+<span class="number">1</span>;T=n+m+<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;p[i]);</span><br><span class="line">        sum+=p[i];</span><br><span class="line">        add(S,i,p[i]);</span><br><span class="line">        <span class="keyword">while</span>(getchar()==<span class="string">' '</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">            add(i,n+x,INF);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">         <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;c[i]);</span><br><span class="line">         add(i+n,T,c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(bfs()) sum-=dfs(S,INF);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; task,<span class="built_in">exp</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[i])&#123;</span><br><span class="line">             task.push_back(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n+<span class="number">1</span>;i&lt;=n+m;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[i]) <span class="built_in">exp</span>.push_back(i-n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,task[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;(<span class="keyword">int</span>)task.size();i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" %d"</span>,task[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,<span class="built_in">exp</span>[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;(<span class="keyword">int</span>)<span class="built_in">exp</span>.size();i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" %d"</span>,<span class="built_in">exp</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最小路径覆盖"><a href="https://loj.ac/problem/6002" target="_blank" rel="noopener">最小路径覆盖</a></h2><h2 id="题解-2">题解：</h2><p>假设<span class="math inline">\(x,y\)</span>之间有一条边，则把<span class="math inline">\(x\)</span>和<span class="math inline">\(y\)</span>分别拆成<span class="math inline">\(x_1,x_2,y_1,y_2\)</span>。在<span class="math inline">\(x_1\)</span>和<span class="math inline">\(y_2\)</span>之间连接一条流量为<span class="math inline">\(1\)</span>的边，构造好二分图后答案即为<span class="math inline">\(n-maxmatch\)</span>。对于方案的输出，可以利用并查集，对于<span class="math inline">\(x\)</span>和<span class="math inline">\(y\)</span>，如果流量流经<span class="math inline">\(x-&gt;y\)</span>，则<span class="math inline">\(x-&gt;y\)</span>在一条路径上，最后<span class="math inline">\(O(n^2)\)</span>输出即可。</p><h2 id="代码-2">代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> S,T,n,m,w[N],to[N],dep[N],head[N],nxt[N],num=<span class="number">1</span>,u,v,pre[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> ww)</span></span>&#123;</span><br><span class="line">    num++;</span><br><span class="line">    to[num]=v;nxt[num]=head[u];w[num]=ww;head[u]=num;</span><br><span class="line">    num++;</span><br><span class="line">    to[num]=u;nxt[num]=head[v];w[num]=<span class="number">0</span>;head[v]=num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) q.pop();</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    dep[S]=<span class="number">0</span>;</span><br><span class="line">    vis[S]=<span class="number">1</span>;</span><br><span class="line">    q.push(S);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u=q.front();q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=nxt[i])&#123;</span><br><span class="line">            <span class="keyword">int</span> v=to[i];</span><br><span class="line">            <span class="keyword">if</span>(vis[v]||w[i]&lt;=<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            vis[v]=<span class="number">1</span>;</span><br><span class="line">            dep[v]=dep[u]+<span class="number">1</span>;</span><br><span class="line">            q.push(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> vis[T];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==T||d==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i;i=nxt[i])&#123;</span><br><span class="line">        <span class="keyword">int</span> v=to[i];</span><br><span class="line">        <span class="keyword">if</span>(dep[v]!=dep[u]+<span class="number">1</span>||w[i]&lt;=<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> flow=dfs(v,min(w[i],d));<span class="comment">//增广的流量</span></span><br><span class="line">        d-=flow;ret+=flow;</span><br><span class="line">        w[i]-=flow;w[i^<span class="number">1</span>]+=flow;</span><br><span class="line">        <span class="keyword">if</span>(d==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ret==<span class="number">0</span>)&#123;<span class="comment">//无法增广</span></span><br><span class="line">        dep[u]=<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> par[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">2</span>*n+<span class="number">1</span>;i++) par[i]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x==par[x]?x:par[x]=find(par[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unite</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    x=find(x);y=find(y);</span><br><span class="line">    <span class="keyword">if</span>(x==y) <span class="keyword">return</span> ;</span><br><span class="line">    par[x]=y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    S=<span class="number">0</span>;T=<span class="number">2</span>*n+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;u,&amp;v);</span><br><span class="line">        add(u,v+n,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) add(S,i,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n+<span class="number">1</span>;i&lt;=<span class="number">2</span>*n;i++) add(i,T,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span>(bfs()) ans-=dfs(S,INF);</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=head[i];j;j=nxt[j])&#123;</span><br><span class="line">            <span class="keyword">if</span>(to[j]&amp;&amp;!w[j]&amp;&amp;to[j]&lt;=<span class="number">2</span>*n)&#123;<span class="comment">//如果i-&gt;to[j]还有流量</span></span><br><span class="line">                unite(i,to[j]-n);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;i--)&#123;</span><br><span class="line">        <span class="keyword">bool</span> check=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(find(j)==i)&#123;</span><br><span class="line">                check=<span class="number">1</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d "</span>,j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(check) <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;网络流24题&quot;&gt;网络流24题&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="网络流" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>数论知识点总结</title>
    <link href="http://yoursite.com/2020/04/07/Math/"/>
    <id>http://yoursite.com/2020/04/07/Math/</id>
    <published>2020-04-07T14:14:14.912Z</published>
    <updated>2019-05-02T03:55:34.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数论知识点总结">数论知识点总结</h1><a id="more"></a><h2 id="gcd最大公约数"><span class="math inline">\(1.gcd\)</span>（最大公约数）</h2><p>对于给出的两个数<span class="math inline">\(a,b\)</span>，我们可以用欧几里得算法来计算最大公约数。欧几里得算法的精髓就在于下面这个公式：<br /><span class="math inline">\(gcd(a,b)=gcd(b,a\)</span>%<span class="math inline">\(b)\)</span></p><p>证明：<br />已知：<span class="math inline">\(gcd(a,b)|a\)</span>并且<span class="math inline">\(gcd(a,b)|b\)</span>,设<span class="math inline">\(a\)</span>%<span class="math inline">\(b=r\)</span>,则<span class="math inline">\(a=r+kb\)</span>,故<span class="math inline">\(r=a-kb\)</span>,根据同余关系可得：<span class="math inline">\(r\)</span>%<span class="math inline">\(gcd(a,b)=0\)</span>,因此<span class="math inline">\(gcd(a,b)=gcd(b,a\)</span>%<span class="math inline">\(b)\)</span></p><p>code：<br /><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b?gcd(b,a%b):a</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br />## <span class="math inline">\(2.exgcd\)</span>（扩展欧几里得算法）<br />扩展欧几里得算法是用于求解<span class="math inline">\(ax+by=gcd(a,b)\)</span>的一组解的算法。<br />根据欧几里得算法我们可知：<span class="math inline">\(gcd(a,b)=gcd(b,a\)</span>%<span class="math inline">\(b)\)</span><br />我们假设<span class="math inline">\(x1,y1\)</span>是满足条件的一组解</p><p>那么<span class="math inline">\(ax1+by1=gcd(a,b)\)</span></p><p>而<span class="math inline">\(gcd(a,b)=gcd(b,a\)</span>%<span class="math inline">\(b)\)</span></p><p>故<span class="math inline">\(ax1+by1=bx2+a\)</span>%<span class="math inline">\(by2\)</span></p><p>而<span class="math inline">\(a\)</span>%<span class="math inline">\(b=a-a/b\ast b\)</span></p><p>因而<span class="math inline">\(ax1+by1=bx2+ay2-a/b\ast by2=ay2+b*(x2- a/b\ast y2)\)</span></p><p>那么我们就得到了一组合法的<span class="math inline">\(x1,y1\)</span>的解：</p><p><span class="math inline">\(x1=y2,y1=x2-a/b\ast y2\)</span></p><p>也就是我们递归下去即可。当<span class="math inline">\(b=0\)</span>的时候我们就可以发现<span class="math inline">\(x=1,y=0\)</span>是合法的</p><p>这是我们再返回<span class="math inline">\(x=1,y=0\)</span>。最后就一直会回溯下去，得到我们的<span class="math inline">\(x1,y1\)</span><br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b)&#123;</span><br><span class="line">        x=<span class="number">1</span>,y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    exgcd(b,a%b)</span><br><span class="line">    <span class="keyword">int</span> temp=x;</span><br><span class="line">    x=y;y=temp-a/b*x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br />但是如果要求<span class="math inline">\(ax+by=gcd(a,b)\)</span>的最小整数解的时候，我们就要对<span class="math inline">\(x\)</span>批量的加上<span class="math inline">\(b\)</span>的倍数，但是这不会影响最终的结果。</p><p>因为<span class="math inline">\(ax+by+kab-kab=a(x+kb)+b*(y-ka)\)</span>，这样依旧是合法的。</p><p>因此我们直接让<span class="math inline">\(x=(x\)</span>%<span class="math inline">\(b+b)\)</span>%<span class="math inline">\(b\)</span>即为最终的答案。</p><h2 id="逆元"><span class="math inline">\(3.\)</span>逆元</h2><p>对于<span class="math inline">\(a\)</span>和<span class="math inline">\(m\)</span>，如果<span class="math inline">\(ax\equiv1(modm)\)</span>,那么称<span class="math inline">\(x\)</span>是<span class="math inline">\(a\)</span>在<span class="math inline">\(m\)</span>下的逆元。</p><p>那么我们该怎么求解逆元呢？我们将逆元的等式转化一下:<br /><span class="math inline">\(ax+my=1\)</span></p><p>由于<span class="math inline">\(ax+my=k\)</span>有解当且仅当<span class="math inline">\(k\)</span>%<span class="math inline">\(gcd(a,m)=0\)</span>的时候有解，说明<span class="math inline">\(gcd(a,m)=1\)</span></p><p>那么我们直接用扩展欧几里得求解即可。<br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b)&#123;</span><br><span class="line">        x=<span class="number">1</span>,y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    exgcd(b,a%b)</span><br><span class="line">    <span class="keyword">int</span> temp=x;</span><br><span class="line">    x=y;y=temp-a/b*x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> m)</span></span>&#123;<span class="comment">//a在m下的逆元</span></span><br><span class="line">    exgcd(a,m);</span><br><span class="line">    <span class="keyword">return</span> (x%m+m)%m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br />逆元一般是用在除法取模上面，如<span class="math inline">\((a/b)\)</span>%<span class="math inline">\(m\)</span>即为<span class="math inline">\(a\)</span>%<span class="math inline">\(m\ast inv(b,m)\)</span></p><h2 id="埃拉托斯特尼筛法"><span class="math inline">\(4.\)</span>埃拉托斯特尼筛法</h2><p>埃拉托斯特尼筛法是一个复杂度为<span class="math inline">\(nlnnlnn\)</span>的筛法。<br />当选中一个数为素数的时候，就把以这个数为因子的数全部筛掉即可。<br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pr;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">seive</span><span class="params">()</span></span>&#123;</span><br><span class="line">vis[<span class="number">0</span>]=vis[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N<span class="number">-10</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[i])&#123;</span><br><span class="line">pr.push_back(i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>*i;j&lt;=N<span class="number">-10</span>;j+=i) vis[j]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br />## <span class="math inline">\(5.\)</span>费马小定理<br />假设<span class="math inline">\(a\)</span>是一个整数，<span class="math inline">\(p\)</span>是一个质数，那么<span class="math inline">\(a^p-a\)</span>是<span class="math inline">\(p\)</span>的倍数</p><p>即<span class="math inline">\(a^p\equiv a(modp)\)</span>,如果<span class="math inline">\(a\)</span>不是<span class="math inline">\(p\)</span>的倍数，这个定理也可以写成:</p><p><span class="math inline">\(a^{p-1}\equiv1(modp)\)</span></p><h2 id="线性同余方程求解"><span class="math inline">\(6.\)</span>线性同余方程求解</h2><p>形如<span class="math inline">\(ax\equiv b(modm)\)</span>即为线性同余方程。<br />将线性同余方程变形后即可得到：</p><p><span class="math inline">\(ax+my=b\)</span><br />只有当<span class="math inline">\(b\)</span>%<span class="math inline">\(gcd(a,m)=0\)</span>时该方程才有解。<br />我们先利用扩展欧几里得算法求出</p><p><span class="math inline">\(ax+my=gcd(a,m)\)</span>的一组解<span class="math inline">\((x0,y0)\)</span>,那么<span class="math inline">\(x=x0*(b/gcd(a,m))\)</span>%<span class="math inline">\(m\)</span><br />即为原方程的一组解。<br />## <span class="math inline">\(7.\)</span>欧拉函数<br />欧拉函数即为小于<span class="math inline">\(n\)</span>的数中与<span class="math inline">\(n\)</span>互质的数的个数<br />比如<span class="math inline">\(\varphi(8)=4\)</span><br />欧拉函数的通式为:</p><p><span class="math inline">\(\varphi(x)=x(1-\frac{1}{p1})(1-\frac{1}{p2})...(1-\frac{1}{pn})\)</span></p><p>其中<span class="math inline">\(p1,p2,...pn\)</span>为<span class="math inline">\(x\)</span>的质因数。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;数论知识点总结&quot;&gt;数论知识点总结&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>拉格朗日插值的应用</title>
    <link href="http://yoursite.com/2020/04/07/lagrange/"/>
    <id>http://yoursite.com/2020/04/07/lagrange/</id>
    <published>2020-04-07T14:14:14.908Z</published>
    <updated>2019-06-03T11:37:16.067Z</updated>
    
    <content type="html"><![CDATA[<h1 id="拉格朗日插值的应用">拉格朗日插值的应用</h1><a id="more"></a><h2 id="引言">引言：</h2><p>什么是拉格朗日插值？假设我们现在有三个点 <span class="math inline">\((x_1,y_1),(x_2,y_2),(x_3,y_3)\)</span>，现在我们要找一条唯一的二次曲线刚好经过这三个点。</p><p>拉格朗日给出了一个绝妙的方法，他把我们要求的曲线的表达式等同于三个函数的累加。具体是这么操作的：</p>第一个函数保证<span class="math inline">\(f_1(x_1)=1,f_1(x_2)=f_1(x_3)=0\)</span><br /><img src="https://pic2.zhimg.com/80/v2-085cca3fb3f1c23c1975b73d7950d138_hd.jpg" alt="f_1(x)" /><br />第二个函数保证<span class="math inline">\(f_2(x_2)=1,f_2(x_1)=f_2(x_3)=0\)</span><br /><img src="https://pic4.zhimg.com/v2-c956818e984bd46c5c9f5d45f7944b3a_r.jpg" alt="f_2(x)" /><br />第三个函数保证<span class="math inline">\(f_3(x_3)=1,f_3(x_1)=f_3(x_2)=0\)</span><br /><img src="https://pic1.zhimg.com/80/v2-276e27d2c27f49cbdf6916468aa497ce_hd.jpg" alt="f_3(x)" /><br />那么我们所要求的函数即为:<br /><center><span class="math inline">\(f(x)=y1f_{1}(x)+y2f_{2}(x)+y3f_{3}(x)\)</span></center><p>可以保证的是这个函数同时经过<span class="math inline">\((x_1,y_1),(x_2,y_2),(x_3,y_3)\)</span>并且是唯一的满足条件的二次函数。</p><h2 id="公式">公式：</h2><p>如果上面的部分你看懂了，那么你已经掌握了拉格朗日插值的用法和思想。接下来我们要做的就是寻找一个公式使得利用现在已有的<span class="math inline">\(n\)</span>个点，来推导出<span class="math inline">\(n-1\)</span>次的函数。</p><p>那么这个函数为:</p><center><span class="math inline">\(f(x)=\sum_{i=1}^ny_i\prod_{j=1,j\neq i}^n\frac{x-x_j}{x_i-x_j}\)</span></center><h2 id="实现">实现：</h2><p>一般情况下拉格朗日插值的复杂度是<span class="math inline">\(O(n^2)\)</span>，即：<br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span>&#123;</span></span><br><span class="line">ll x,y;</span><br><span class="line">&#125;p[N];</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a,ll b,ll mod)</span></span>&#123;</span><br><span class="line">ll ans=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(b)&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">ans=(ans%mod*a%mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line">a=(a%mod*a%mod)%mod;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Lagrange</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;<span class="comment">//</span></span><br><span class="line">ll base1=<span class="number">1</span>;</span><br><span class="line">ll base2=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="comment">//lj(k)基函数 </span></span><br><span class="line"><span class="keyword">if</span>(j==i) <span class="keyword">continue</span>;</span><br><span class="line">base1=(base1%mod*((k-p[i].x)%mod+mod)%mod)%mod;</span><br><span class="line">base2=(base2%mod*((p[j].x-p[i].x)%mod+mod)%mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line">ans=(ans%mod+(p[j].y%mod*base1%mod*qpow(base2,mod<span class="number">-2</span>,mod)%mod)%mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;p[i].x&gt;&gt;p[i].y;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;Lagrange(k)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>如果已知的坐标是连续的话，那么我们可以通过预处理使得复杂度变为<span class="math inline">\(O(n)\)</span>,代码以<a href="https://codeforces.com/contest/622/problem/F" target="_blank" rel="noopener">codeforces 622F</a>为例。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">ll p[N],x[N],s1[N],s2[N],ifac[N];</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">ll ans=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(b)&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ans%mod*a%mod)%mod;</span><br><span class="line">a=(a%mod*a%mod)%mod;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (ans%mod+mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//拉格朗日插值，n项，每个点的坐标为(x_i,y_i)，求第xi项的值，保证x是连续的一段 </span></span><br><span class="line"><span class="function">ll <span class="title">lagrange</span><span class="params">(ll n, ll *x, ll *y, ll xi)</span> </span>&#123;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    s1[<span class="number">0</span>] = (xi-x[<span class="number">0</span>])%mod, s2[n+<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; i++) s1[i] = <span class="number">1l</span>l*s1[i<span class="number">-1</span>]*(xi-x[i])%mod;</span><br><span class="line">    <span class="keyword">for</span> (ll i = n; i &gt;= <span class="number">0</span>; i--) s2[i] = <span class="number">1l</span>l*s2[i+<span class="number">1</span>]*(xi-x[i])%mod;</span><br><span class="line">    ifac[<span class="number">0</span>] = ifac[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">2</span>; i &lt;= n; i++) ifac[i] = <span class="number">-1l</span>l*mod/i*ifac[mod%i]%mod;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">2</span>; i &lt;= n; i++) ifac[i] = <span class="number">1l</span>l*ifac[i]*ifac[i<span class="number">-1</span>]%mod;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">        (ans += <span class="number">1l</span>l*y[i]*(i == <span class="number">0</span> ? <span class="number">1</span> : s1[i<span class="number">-1</span>])%mod*s2[i+<span class="number">1</span>]%mod</span><br><span class="line">            *ifac[i]%mod*(((n-i)&amp;<span class="number">1</span>) ? <span class="number">-1</span> : <span class="number">1</span>)*ifac[n-i]%mod) %= mod;</span><br><span class="line">    <span class="keyword">return</span> (ans+mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ll n,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">p[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=k+<span class="number">2</span>;i++) p[i]=(p[i<span class="number">-1</span>]%mod+qpow(i,k))%mod;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=k+<span class="number">2</span>;i++) x[i]=i;</span><br><span class="line"><span class="keyword">if</span>(n&lt;=k+<span class="number">2</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;p[n]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;lagrange(k+<span class="number">2</span>,x,p,n)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结">总结：</h2><p>其实拉格朗日插值在算法竞赛中主要用于数据分析，即对于给定的某些关系构造出若干已知点，然后利用这些已知点去计算通项公式。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;拉格朗日插值的应用&quot;&gt;拉格朗日插值的应用&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>2019江西省程序设计竞赛</title>
    <link href="http://yoursite.com/2020/04/07/JXCPC/"/>
    <id>http://yoursite.com/2020/04/07/JXCPC/</id>
    <published>2020-04-07T14:14:14.905Z</published>
    <updated>2019-07-21T15:21:19.307Z</updated>
    
    <content type="html"><![CDATA[<h1 id="江西省程序设计竞赛">2019江西省程序设计竞赛</h1><a id="more"></a><h2 id="a.cotree"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6567" target="_blank" rel="noopener">A.Cotree</a></h2><h2 id="题意">题意:</h2><p>两棵树，你需要连接两个点使得<span class="math inline">\(\sum_{i=1}^{i=n}{\sum_{j=i+1}^{j=n}}{dis(i,j)}\)</span>最小。<br />## 思路：<br />对于每棵树进行换根dp，对每棵子树找到一个点使得所有点到这个点的距离和最小，连接这两个点，然后进行一次DFS统计每条边的贡献，累加即可。<br />## code<br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">100</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>&gt; G[N];</span><br><span class="line"><span class="keyword">int</span> n,n1,n2;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(vis[x]) <span class="keyword">return</span> ;</span><br><span class="line">    vis[x]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> v:G[x])&#123;</span><br><span class="line">        dfs1(v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ta,tb,now;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> dp[N];<span class="keyword">long</span> <span class="keyword">long</span> siz[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> u,<span class="keyword">long</span> <span class="keyword">long</span> fa)</span></span>&#123;</span><br><span class="line">    siz[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> v:G[u])&#123;</span><br><span class="line">        <span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line">        dfs2(v,u);</span><br><span class="line">        siz[u]+=siz[v];</span><br><span class="line">        dp[u]+=dp[v];</span><br><span class="line">    &#125;</span><br><span class="line">    dp[u]+=siz[u];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs3</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> u,<span class="keyword">long</span> <span class="keyword">long</span> fa)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ans&gt;dp[u])&#123;</span><br><span class="line">        ans=dp[u];</span><br><span class="line">        now=u;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> v:G[u])&#123;</span><br><span class="line">        <span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> res=dp[u]-dp[v]-siz[v];</span><br><span class="line">        dp[v]=(dp[v]+res+n1-siz[v]);</span><br><span class="line">        dfs3(v,u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs4</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> u,<span class="keyword">long</span> <span class="keyword">long</span> fa)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ans&gt;dp[u])&#123;</span><br><span class="line">        ans=dp[u];</span><br><span class="line">        now=u;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> v:G[u])&#123;</span><br><span class="line">        <span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> res=dp[u]-dp[v]-siz[v];</span><br><span class="line">        dp[v]=(dp[v]+res+n2-siz[v]);</span><br><span class="line">        dfs4(v,u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">final</span>=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">    <span class="keyword">final</span>+=siz[now]*(n-siz[now]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> v:G[now])&#123;</span><br><span class="line">        <span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line">        dfs(v,now);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("1.in","r",stdin);</span></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> u,v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-2</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;u&gt;&gt;v;</span><br><span class="line">        G[u].push_back(v);</span><br><span class="line">        G[v].push_back(u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> a,b;<span class="comment">//找到左子树的一个点和右子树的一个点</span></span><br><span class="line">    a=<span class="number">1</span>;dfs1(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])&#123;</span><br><span class="line">            b=i;n2++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    n1=n-n2;</span><br><span class="line">    ans=<span class="number">99999999999999</span>;</span><br><span class="line">    now=a;</span><br><span class="line">    dfs2(a,<span class="number">0</span>);</span><br><span class="line">    dfs3(a,<span class="number">0</span>);</span><br><span class="line">    ta=now;</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    <span class="built_in">memset</span>(siz,<span class="number">0</span>,<span class="keyword">sizeof</span>(siz));</span><br><span class="line">    ans=<span class="number">99999999999999</span>;</span><br><span class="line">    now=b;</span><br><span class="line">    dfs2(b,<span class="number">0</span>);</span><br><span class="line">    dfs4(b,<span class="number">0</span>);</span><br><span class="line">    tb=now;</span><br><span class="line">    G[ta].push_back(tb);</span><br><span class="line">    G[tb].push_back(ta);</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    <span class="built_in">memset</span>(siz,<span class="number">0</span>,<span class="keyword">sizeof</span>(siz));</span><br><span class="line">    dfs2(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="keyword">final</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br />## <a href="http://acm.hdu.edu.cn/showproblem.php?pid=6570" target="_blank" rel="noopener">D.Wave</a><br />## 题意：<br />给一个数组，找到最长的一个子序列使得这个子序列的所有奇数位的数字相同，所有偶数位的数字相同，奇数位和偶数位的数字不同。<br />## 思路：<br />利用一个前缀和可以快速地查询<span class="math inline">\([l,r]\)</span>区间内<span class="math inline">\(c\)</span>的数量，记录下每个数字出现的位置，暴力枚举子序列的那两个不同的数字，更新最大值。<br />## code<br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">100</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pos[<span class="number">200</span>];</span><br><span class="line"><span class="keyword">int</span> num[N][<span class="number">201</span>];</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,c;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">        pos[i].push_back(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        pos[a[i]].push_back(i);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">100</span>;j++) num[i][j]=num[i<span class="number">-1</span>][j];</span><br><span class="line">        num[i][a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=c;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=c;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=j)&#123;</span><br><span class="line">                <span class="keyword">int</span> now=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">2</span>;k&lt;(<span class="keyword">int</span>)pos[i].size();k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(num[pos[i][k]][j]-num[pos[i][k<span class="number">-1</span>]][j]&gt;<span class="number">0</span>) now++;</span><br><span class="line">                &#125;</span><br><span class="line">                now=now*<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(num[n][j]-num[pos[i][(<span class="keyword">int</span>)pos[i].size()<span class="number">-1</span>]][j]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                     now++;</span><br><span class="line">                &#125;</span><br><span class="line">                ans=max(ans,now);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br />## <a href="http://acm.hdu.edu.cn/showproblem.php?pid=6572" target="_blank" rel="noopener">F.String</a><br />## 题意：<br />给定一个字符串，随机拿出四个字母，求这四个字母组成"avin"的概率。<br />## 思路：<br />答案即为<span class="math inline">\(\frac{num[&#39;a&#39;]*num[&#39;v&#39;]*num[&#39;i&#39;]*num[&#39;n&#39;]}{|s|^4}\)</span><br />## 代码<br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;<span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;s)&#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> a,b,c,d;</span><br><span class="line">        a=b=c=d=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">'a'</span>) a++;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">'v'</span>) b++;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">'i'</span>) c++;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">'n'</span>) d++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a*b*c*d==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"0/1"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> x=a*b*c*d;</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> y=(n*n*n*n);</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> gg=__gcd(x,y);</span><br><span class="line">            x/=gg;</span><br><span class="line">            y/=gg;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">'/'</span>&lt;&lt;y&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br />## <a href="http://acm.hdu.edu.cn/showproblem.php?pid=6573" target="_blank" rel="noopener">G.Traffic</a><br />## 题意：<br />一个十字路口，东西和南北各有车辆经过，每个车到达十字路口的时间为<span class="math inline">\(t_i\)</span>,但是如果东西走向的汽车和南北走向的汽车同时到达十字路口，那么南北走向的就得等待。问最少要等多长时间。<br />## 思路：<br />暴力枚举等待时间，知道不会再有车发生时间冲撞。<br />## 代码:<br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3000</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[N],b[N];</span><br><span class="line"><span class="keyword">bool</span> ta[N],tb[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(ta,<span class="number">0</span>,<span class="keyword">sizeof</span>(ta));</span><br><span class="line">        <span class="built_in">memset</span>(ta,<span class="number">0</span>,<span class="keyword">sizeof</span>(tb));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;a[i],ta[a[i]]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">999999999</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1001</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">            <span class="built_in">memset</span>(tb,<span class="number">0</span>,<span class="keyword">sizeof</span>(tb));</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                tb[b[j]+i]=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(ta[b[j]+i]==<span class="number">1</span>)&#123;</span><br><span class="line">                    flag=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">                res=i;<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br />## <a href="http://acm.hdu.edu.cn/showproblem.php?pid=6574" target="_blank" rel="noopener">H.Rng</a><br />## 题意：<br />一个<span class="math inline">\([1,n]\)</span>的区间，执行下列操作：<br />1.任意在<span class="math inline">\([1,n]\)</span>中选择一个<span class="math inline">\(r\)</span><br />2.在<span class="math inline">\([1,r]\)</span>中选择一个<span class="math inline">\(l\)</span><br />计算两次线段相交的概率<br />## 思路:<br />手动计算2的情况为<span class="math inline">\(\frac{3}{4}\)</span>,暴力打表发现接近<span class="math inline">\(\frac{1}{2}\)</span>，猜测答案为<span class="math inline">\(\frac{n+1}{2*n}\)</span><br />## 代码:<br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">qp</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=(ans%mod*a%mod)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        a=(a%mod*a%mod)%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;((n+<span class="number">1</span>)%mod*qp(<span class="number">2</span>*n,mod<span class="number">-2</span>)%mod)%mod&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br />## <a href="http://acm.hdu.edu.cn/contests/contest_show.php?cid=868" target="_blank" rel="noopener">I.Budget</a><br />## 题意：<br /><span class="math inline">\(n\)</span>个保留三位的小数，计算他们四舍五入变为2位后的差值<br />## 思路：<br />以string读入，判断最后一位即可。<br />## 代码：<br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2000000</span>;</span><br><span class="line"><span class="built_in">string</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</span><br><span class="line">        <span class="keyword">double</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">            <span class="keyword">int</span> l=(<span class="keyword">int</span>)a[i].length();</span><br><span class="line">            <span class="keyword">if</span>(a[i][l<span class="number">-1</span>]&lt;=<span class="string">'4'</span>)&#123;</span><br><span class="line">                ans-=((a[i][l<span class="number">-1</span>]-<span class="string">'0'</span>)*<span class="number">1.0</span>)/(<span class="number">1000</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                ans+=((<span class="number">10</span>-(a[i][l<span class="number">-1</span>]-<span class="string">'0'</span>))*<span class="number">1.0</span>)/<span class="number">1000</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><br />## <a href="http://acm.hdu.edu.cn/showproblem.php?pid=6576" target="_blank" rel="noopener">J.Worker</a><br />## 题意：<br /><span class="math inline">\(n\)</span>个工作间，<span class="math inline">\(m\)</span>个人，第<span class="math inline">\(i\)</span>个工作间每个人每天的产量位<span class="math inline">\(a_i\)</span>，计算一种分配方案使的每个工作间的产量相同，如果没有，输出"No"。<br />## 思路：<br /><span class="math inline">\(lcm\)</span>分配即可。<br />## 代码：<br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3000</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">lcm</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a*b/__gcd(a,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> n,m;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m)&#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> all=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;a[i],all=lcm(all,a[i]);</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> zz=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            b[i]=all/(a[i]);</span><br><span class="line">            zz+=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(m%zz)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++) <span class="built_in">cout</span>&lt;&lt;m/(zz)*b[i]&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;(m/zz)*b[n]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>## <a href="http://acm.hdu.edu.cn/contests/contest_showproblem.php?cid=868&amp;pid=1011" target="_blank" rel="noopener">K.Class</a><br />## 题意：<br /><span class="math inline">\(x=a+b,y=a-b\)</span><br />计算<span class="math inline">\(a*b\)</span><br />## 思路：<br />答案为<span class="math inline">\(\frac{(x+y)*(x-y)}{4}\)</span><br />## 代码<br /><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> x,y;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;(x+y)*(x-y)/<span class="number">4</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;江西省程序设计竞赛&quot;&gt;2019江西省程序设计竞赛&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="竞赛" scheme="http://yoursite.com/tags/%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
</feed>
